<?xml version='1.0' encoding='UTF-8'?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-strict.xsd"><file original="xliff-core-1.2-strict.xsd" source-language="en" target-language="fr" datatype="plaintext" date="2015-07-30T09:07:45Z"><header><phase-group>
    <phase tool-id="tmgmt" phase-name="extraction" process-name="extraction" job-id="38"/>
   </phase-group><tool tool-id="tmgmt" tool-name="Drupal Translation Management Tools"/></header><body><group id="736"><note>HTTPS Everywhere FAQ</note><trans-unit id="736][body][0][value" resname="736][body][0][value"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt>This page answers frequently-asked questions about EFF's <bpt id="tjiid736-2">&lt;a href="/https-everywhere"&gt;</bpt>HTTPS Everywhere<ept id="tjiid736-2">&lt;/a&gt;</ept> project. If your question isn't answered below, you can try the resources <bpt id="tjiid736-4">&lt;a href="/https-everywhere/development"&gt;</bpt>listed here<ept id="tjiid736-4">&lt;/a&gt;</ept>.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt>Cette page répond à vos questions fréquentes sur le projet <bpt id="tjiid736-2">&lt;a href="/https-everywhere"&gt;</bpt>HTTPS Everywhere<ept id="tjiid736-2">&lt;/a&gt;</ept> de l'EFF. Si vous ne trouvez pas la réponse à votre question ci-dessous, vous pouvez consulter les ressources <bpt id="tjiid736-4">&lt;a href="/https-everywhere/development"&gt;</bpt>présentées ici<ept id="tjiid736-4">&lt;/a&gt;</ept>.<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Body</note></trans-unit><trans-unit id="736][field_questions][0][question" resname="736][field_questions][0][question"><source xml:lang="en">What if HTTPS Everywhere breaks some site that I use?</source><target xml:lang="fr">Que faire si HTTPS Everywhere rend un site que j'utilise non fonctionnel ?</target><note>Question</note><note from="ID">breaks =</note></trans-unit><trans-unit id="736][field_questions][0][answer" resname="736][field_questions][0][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="bugs"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>This is occasionally possible because of inconsistent support for HTTPS on sites (e.g., when a site seems to support HTTPS access but makes a few, unpredictable, parts of the site unavailable in HTTPS). If you <bpt id="tjiid736-6">&lt;a href="https://github.com/EFForg/https-everywhere/issues"&gt;</bpt>report the problem to us<ept id="tjiid736-6">&lt;/a&gt;</ept>, we can try to fix it. In the meantime, you can disable the rule affecting that particular site in your own copy of HTTPS Everywhere by clicking on the HTTPS Everywhere toolbar button and unchecking the rule for that site.<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>You can also report the problem to the site, since they have the power to fix it!<ept id="tjiid736-9">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="bugs"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Ceci peut arriver parfois à cause de la prise en charge inconsistante du protocole HTTPS par certains sites Web (par exemple, quand un site semble proposer l'accès HTTPS mais qu’il rend quelques parties imprévisibles du site non disponibles via HTTPS). Si vous nous <bpt id="tjiid736-6">&lt;a href="https://github.com/EFForg/https-everywhere/issues"&gt;</bpt>signalez le problème<ept id="tjiid736-6">&lt;/a&gt;</ept>, nous pourrons tenter de le réparer. Entre temps, vous pouvez désactiver la règle affectant ce site particulier dans votre propre copie de HTTPS Everywhere en cliquant sur le bouton de la barre d'outils HTTPS Everywhere et en décochant la règle pour ce site. <ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>Vous pouvez également signaler le problème aux auteurs du site Web en question, puisqu’ils ont le pouvoir de le régler !<ept id="tjiid736-9">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][1][question" resname="736][field_questions][1][question"><source xml:lang="en">Why is HTTPS Everywhere preventing me from joining this hotel/school/other wireless network?</source><target xml:lang="fr">Pourquoi HTTPS Everywhere m'empêche-t-il de rejoindre tel hôtel, école ou autre réseau sans fil ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][1][answer" resname="736][field_questions][1][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="captiveportal"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Some wireless networks hijack your HTTP connections when you first join them, in order to demand authentication or simply to try to make you agree to terms of use. HTTPS pages are protected against this type of hijacking, which is as it should be. If you go to a website that isn't protected by HTTPS Everywhere (currently, nytimes.com is one such site) that will allow your connection to be captured and redirected to the authentication or terms of use page.<ept id="tjiid736-5">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="captiveportal"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Certains réseaux sans fil détournent vos connexions HTTP lorsque vous les rejoignez pour la première fois, pour vous demander une authentification ou simplement pour tenter de vous faire accepter des conditions d'utilisation. Les pages HTTPS sont protégées contre ce type de détournement, comme elle le devraient. Si vous visitez un site Web qui n'est pas protégée par HTTPS Everywhere (actuellement, nytimes.com est l’un de ces sites) ceci permettra à votre connexion d’être capturée et redirigée vers la page d'authentification ou les termes d'utilisation.<ept id="tjiid736-5">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][2][question" resname="736][field_questions][2][question"><source xml:lang="en">Will there be a version of HTTPS Everywhere for IE, Safari, or some other browser?</source><target xml:lang="fr">Y aura-t-il une version de HTTPS Everywhere pour Internet Explorer, Safari ou pour un autre navigateur ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][2][answer" resname="736][field_questions][2][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="platform"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> As of early 2012, the Safari extension API does not offer a way to perform secure rewriting of http requests to https. But if you happen to know a way to perform secure request rewriting in these browsers, feel free to let us know at <bpt id="tjiid736-4">&lt;tt&gt;</bpt>https-everywhere at EFF.org<ept id="tjiid736-4">&lt;/tt&gt;</ept> (but note that modifying <bpt id="tjiid736-6">&lt;tt&gt;</bpt>document.location<ept id="tjiid736-6">&lt;/tt&gt;</ept> or <bpt id="tjiid736-8">&lt;tt&gt;</bpt>window.location<ept id="tjiid736-8">&lt;/tt&gt;</ept> in JavaScript is not secure).<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="platform"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept>À partir du début 2012, l'API d'extension de Safari n'offre pas le moyen d'effectuer une réécriture sécurisée des requêtes HTTP en HTTPS. Si toutefois vous connaissez un moyen pour effectuer des demandes de réécriture sécurisées dans ces navigateurs, n'hésitez pas à nous le faire savoir à l'adresse <bpt id="tjiid736-4">&lt;tt&gt;</bpt>https-everywhere @ EFF.org<ept id="tjiid736-4">&lt;/tt&gt;</ept> (mais notez que le fait de modifier <bpt id="tjiid736-6">&lt;tt&gt;</bpt>document.location<ept id="tjiid736-6">&lt;/tt&gt;</ept> ou <bpt id="tjiid736-8">&lt;tt&gt;</bpt>window.location<ept id="tjiid736-8">&lt;/tt&gt;</ept> via JavaScript n'est pas sécurisé).<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][3][question" resname="736][field_questions][3][question"><source xml:lang="en">Why use a whitelist of sites that support HTTPS? Why can't you try to use HTTPS for every last site, and only fall back to HTTP if it isn't available?</source><target xml:lang="fr">Pourquoi utiliser une liste blanche des sites qui prennent en charge HTTPS ? Pourquoi ne pas plutôt essayer d'utiliser HTTPS pour chaque site et recourir à HTTP uniquement si ce n'est pas disponible ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][3][answer" resname="736][field_questions][3][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="automatic-https"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> There are several problems with the idea of trying to automatically detect HTTPS on every site. There is no guarantee that sites are going to give the same response via HTTPS that they give via HTTP. As of 2015, Forbes is a good example of this problem: compare these <bpt id="tjiid736-4">&lt;a href="http://forbes.com"&gt;</bpt>HTTP<ept id="tjiid736-4">&lt;/a&gt;</ept> and <bpt id="tjiid736-6">&lt;a href="https://forbes.com"&gt;</bpt>HTTPS<ept id="tjiid736-6">&lt;/a&gt;</ept> responses. Also, it's not possible to test for HTTPS in real time without introducing security vulnerabilities (What should the extension do if the HTTPS connection attempt fails? Falling back to insecure HTTP isn't safe). And in some cases, HTTPS Everywhere has to perform quite complicated transformations on URIs — for example until recently the Wikipedia rule had to turn an address like <bpt id="tjiid736-8">&lt;tt&gt;</bpt>http://en.wikipedia.org/wiki/World_Wide_Web<ept id="tjiid736-8">&lt;/tt&gt;</ept> into one like <bpt id="tjiid736-10">&lt;tt&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/World_Wide_Web<ept id="tjiid736-10">&lt;/tt&gt;</ept> because HTTPS was not available on Wikipedia's usual domains.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="automatic-https"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Il y a plusieurs problèmes liés à l'idée d'essayer de détecter automatiquement le protocole HTTPS sur chaque site Web. Il n'y a aucune garantie que les sites donnent la même réponse via HTTPS que celle offerte via HTTP. À partir de 2015, Forbes est un bon exemple pour ce problème : comparez ses réponses <bpt id="tjiid736-4">&lt;a href="http://forbes.com"&gt;</bpt>HTTP<ept id="tjiid736-4">&lt;/a&gt;</ept> et <bpt id="tjiid736-6">&lt;a href="https://forbes.com"&gt;</bpt>HTTPS<ept id="tjiid736-6">&lt;/a&gt;</ept>. En outre, il n'est pas possible de tester le HTTPS en temps réel sans introduire des failles de sécurité (Que devrait faire l'extension si la tentative de connexion HTTPS échoue ? Recourir à un HTTP non sécurisé n'est pas sûr.) Et dans certains cas, HTTPS Everywhere doit effectuer des transformations assez compliquées sur un URI. Par exemple, jusqu'à récemment, la règle pour le site de Wikipedia devait transformer une adresse comme <bpt id="tjiid736-8">&lt;tt&gt;</bpt>http://en.wikipedia.org/wiki/World_Wide_Web<ept id="tjiid736-8">&lt;/tt&gt;</ept> en <bpt id="tjiid736-10">&lt;tt&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/World_Wide_Web<ept id="tjiid736-10">&lt;/tt&gt;</ept> car le HTTPS n'était pas disponible sur les noms de domaine habituels de Wikipedia.<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][4][question" resname="736][field_questions][4][question"><source xml:lang="en">How do I get rid of/move the HTTPS Everywhere button in the toolbar?</source><target xml:lang="fr">Comment puis-je retirer ou déplacer le bouton HTTPS Everywhere sur la barre d'outils ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][4][answer" resname="736][field_questions][4][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="toolbar"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> The HTTPS Everywhere button is useful because it allows you to see, and disable, a ruleset if it happens to be causing problems with a site. But if you'd rather disable it, go to View-&amp;gt;Toolbars-&amp;gt;Customize, and drag the button out of the toolbar into the Addons bar at the bottom of the page. Then you can hide the Addons bar. (In theory you should be able to drag it into the tray of available icons too, but that may trigger <bpt id="tjiid736-4">&lt;a href="https://trac.torproject.org/projects/tor/ticket/6276"&gt;</bpt>this bug<ept id="tjiid736-4">&lt;/a&gt;</ept>.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="toolbar"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Le bouton HTTPS Everywhere est utile car il permet de vérifier et de désactiver le jeu de règles si celui-ci crée des problèmes sur un site. Si toutefois vous préférez le désactiver, allez sur le menu Affichage-&amp;gt; Barres d'outils-&amp;gt; Personnaliser et faites glisser le bouton en dehors de la barre d'outils et sur la barre d'Extensions en bas de page. Ensuite, vous pouvez masquer la barre d'Extensions. (En théorie, vous devriez pouvoir également le faire glisser vers la barre des icônes disponibles, mais cela peut déclencher <bpt id="tjiid736-4">&lt;a href="https://trac.torproject.org/projects/tor/ticket/6276"&gt;</bpt>ce bogue<ept id="tjiid736-4">&lt;/a&gt;</ept>.)<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][5][question" resname="736][field_questions][5][question"><source xml:lang="en">When does HTTPS Everywhere protect me? When does it not protect me?</source><target xml:lang="fr">Dans quel cas HTTPS Everywhere me protège-t-il ? Et dans quel cas ne me protège-t-il pas ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][5][answer" resname="736][field_questions][5][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;a name="where"&gt;</bpt><ept id="tjiid736-1">&lt;/a&gt;</ept>

HTTPS Everywhere protects you only when you are using <bpt id="tjiid736-3">&lt;em&gt;</bpt>encrypted portions of supported web sites<ept id="tjiid736-3">&lt;/em&gt;</ept>. On a supported site, it will automatically activate HTTPS encryption for all known supported parts of the site (for some sites, this might be only a portion of the entire site). For example, if your web mail provider does not support HTTPS at all, HTTPS Everywhere can't make your access to your web mail secure. Similarly, if a site allows HTTPS for text but not images, someone might be able to see which images your browser loads and guess what you're accessing.

HTTPS Everywhere depends entirely on the security features of the individual web sites that you use; it <bpt id="tjiid736-5">&lt;em&gt;</bpt>activates<ept id="tjiid736-5">&lt;/em&gt;</ept> those security features, but it can't <bpt id="tjiid736-7">&lt;em&gt;</bpt>create<ept id="tjiid736-7">&lt;/em&gt;</ept> them if they don't already exist. If you use a site not supported by HTTPS Everywhere or a site that provides some information in an insecure way, HTTPS Everywhere can't provide additional protection for your use of that site. Please remember to check that a particular site's security is working to the level you expect before sending or receiving confidential information, including passwords.

One way to determine what level of protection you're getting when using a particular site is to use a packet-sniffing tool like <bpt id="tjiid736-9">&lt;a href="http://www.wireshark.org/"&gt;</bpt>Wireshark<ept id="tjiid736-9">&lt;/a&gt;</ept> to record your own communications with the site. The resulting view of your communications is about the same as what an eavesdropper on your wifi network or at your ISP would see. This way, you can determine whether some or all of your communications would be protected; however, it may be quite time-consuming to make sense of the Wireshark output with enough care to get a definitive answer.

You can also turn on the "Block all HTTP requests" feature for added protection. Instead of loading insecure pages or images, HTTPS Everywhere will block them outright.</source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;a name="where"&gt;</bpt><ept id="tjiid736-1">&lt;/a&gt;</ept>

HTTPS Everywhere vous protège uniquement lorsque vous utilisez des <bpt id="tjiid736-3">&lt;em&gt;</bpt>parties chiffrés de sites Web pris en charge<ept id="tjiid736-3">&lt;/em&gt;</ept>. Sur un site compatible, il active automatiquement le chiffrement HTTPS pour toutes les parties du site Web qui sont pris en charge (pour certains sites, cela ne correspond qu'à une section de l’ensemble). Par exemple; si votre fournisseur de messagerie Web n'est pas du tout compatible HTTPS, HTTPS Everywhere ne peut pas sécuriser votre accès à votre messagerie Web. De même, si un site permet le HTTPS pour du texte, mais pas pour des images, quelqu'un pourrait être en mesure de voir quelles images sont chargées par votre navigateur et de deviner ce que visitez.

HTTPS Everywhere repose entièrement sur les fonctionnalités de sécurité des sites Web individuels que vous utilisez ; il <bpt id="tjiid736-5">&lt;em&gt;</bpt>active<ept id="tjiid736-5">&lt;/em&gt;</ept> les fonctions de sécurité, mais il ne peut pas les <bpt id="tjiid736-7">&lt;em&gt;</bpt>créer<ept id="tjiid736-7">&lt;/em&gt;</ept> si elles n'existent pas déjà. Si vous utilisez un site qui n'est pas pris en charge par HTTPS Everywhere ou un site qui fournit certaines informations de manière non sécurisée, HTTPS Everywhere ne peut pas fournir de protection supplémentaire pour votre utilisation de ce site. N'oubliez pas de vous assurer que la sécurité d'un site particulier fonctionne au degré que vous attendez avant d'envoyer ou de recevoir des informations confidentielles, y compris des mots de passe.

Une façon de déterminer le niveau de protection que vous obtenez lorsque vous visitez un site particulier est d'utiliser un analyseur de paquets comme <bpt id="tjiid736-9">&lt;a href="http://www.wireshark.org/"&gt;</bpt>Wireshark<ept id="tjiid736-9">&lt;/a&gt;</ept> pour enregistrer vos communications avec le site en question. La vue de vos communications qui en résulte est plus ou moins la même que ce qu'un espion sur votre réseau Wi-Fi ou chez votre FAI serait en mesure de voir. De cette façon, vous pouvez déterminer si l'ensemble ou une partie de vos communications seraient protégées. Toutefois, une telle vérification peut prendre beaucoup de temps avant qu vous puissiez comprendre suffisamment les données de Wireshark pour obtenir une réponse définitive.

Vous pouvez aussi activer la fonction "Block all HTTP requests" (Bloquer toutes les requêtes HTTP) pour une protection supplémentaire. Au lieu de charger des pages ou des images non sécurisées, HTTPS Everywhere les bloquera immédiatement.</target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][6][question" resname="736][field_questions][6][question"><source xml:lang="en">What does HTTPS Everywhere protect me against?</source><target xml:lang="fr">De quoi HTTPS Everywhere me protège-t-il ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][6][answer" resname="736][field_questions][6][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="threats"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>On supported parts of supported sites, HTTPS Everywhere enables the sites' HTTPS protection which can protect you against eavesdropping and tampering with the contents of the site or with the information you send to the site. Ideally, this provides some protection against an attacker learning the content of the information flowing in each direction — for instance, the text of e-mail messages you send or receive through a webmail site, the products you browse or purchase on an e-commerce site, or the particular articles you read on a reference site.<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-7">&lt;p&gt;</bpt>However, HTTPS Everywhere <bpt id="tjiid736-8">&lt;strong&gt;</bpt>does not conceal the identities of the sites you access<ept id="tjiid736-8">&lt;/strong&gt;</ept>, the amount of time you spend using them, or the amount of information you upload or download from a particular site. For example, if you access http://www.eff.org/issues/nsa-spying and HTTPS Everywhere rewrites it to https://www.eff.org/issues/nsa-spying, an eavesdropper can still trivially recognize that you are accessing www.eff.org (but might not know which issue you are reading about). In general, the entire hostname part of the URL remains exposed to the eavesdropper because this must be sent repeatedly in unencrypted form while setting up the connection. Another way of saying this is that HTTPS was never designed to conceal the identity of the sites that you visit.<ept id="tjiid736-7">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Researchers have also shown that it may be possible for someone to figure out more about what you're doing on a site merely through careful observation of the amount of data you upload and download, or the timing patterns of your use of the site. A simple example is that if the site only has one page of a certain total size, anyone downloading exactly that much data from the site is probably accessing that page.<ept id="tjiid736-11">&lt;/p&gt;</ept><bpt id="tjiid736-13">&lt;p&gt;</bpt>If you want to protect yourself against monitoring of the sites you visit, consider using HTTPS Everywhere together with software like <bpt id="tjiid736-14">&lt;a href="https://www.torproject.org/"&gt;</bpt>Tor<ept id="tjiid736-14">&lt;/a&gt;</ept>.<ept id="tjiid736-13">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="threats"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Sur les parties prises en charge des sites Web compatibles, HTTPS Everywhere active la protection HTTPS de ces sites, ce qui peut vous protéger contre l'écoute clandestine et la falsification du contenu du site ou des informations que vous lui envoyez. Idéalement, cela offre une certaine protection en empêchant un attaquant d’apprendre le contenu des informations qui circulent dans chaque direction (par exemple, le texte des messages électroniques que vous envoyez ou recevez sur une messagerie Web, les produits que vous achetez sur un site de commerce éléctronique ou les pages spécifiques que vous lisez sur un site de référence).<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-7">&lt;p&gt;</bpt>Cependant, HTTPS Everywhere <bpt id="tjiid736-8">&lt;strong&gt;</bpt>ne cache pas l'identité des sites vous visitez<ept id="tjiid736-8">&lt;/strong&gt;</ept>, la quantité de temps que vous passez à les utiliser ou la quantité d'informations que vous téléchargez ou que vous envoyez à partir d'un site Web particulier. Par exemple, si vous visitez http://www.eff.org/issues/nsa-spying et que HTTPS Everywhere le réécrit en https://www.eff.org/issues/nsa-spying, un espion pourrait quand même reconnaître facilement que vous accédez à www.eff.org (mais ne pourrait pas savoir le sujet que vous lisez). En général, toute la partie du nom d'hôte de l'URL reste exposée à un espion parce qu'elle doit être envoyée à plusieurs reprises sous forme non chiffrée lors de la mise en place de la connexion. Pour l’expliquer autrement, le protocole HTTPS n'a jamais été conçu pour cacher l'identité des sites que vous visitez.<ept id="tjiid736-7">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Des chercheurs ont également montré qu'une personne pourrait en savoir plus sur ce que vous faites sur un site en observant attentivement la quantité de données que vous envoyez ou que vous téléchargez, ou les modes de synchronisation de votre visite du site. Un exemple simple est que si le site possède uniquement une page d'une taille précise, quiconque télécharge exactement autant de données à partir de ce site accède probablement à cette page.<ept id="tjiid736-11">&lt;/p&gt;</ept><bpt id="tjiid736-13">&lt;p&gt;</bpt>Si vous souhaitez vous protéger contre la surveillance des sites que vous visitez, envisagez d'utiliser HTTPS Everywhere en combinaison avec un logiciel comme <bpt id="tjiid736-14">&lt;a href="https://www.torproject.org/"&gt;</bpt>Tor<ept id="tjiid736-14">&lt;/a&gt;</ept>.<ept id="tjiid736-13">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][7][question" resname="736][field_questions][7][question"><source xml:lang="en">How do I get support for an additional site in HTTPS Everywhere?</source><target xml:lang="fr">Comment obtenir une assistance pour un site supplémentaire sur HTTPS Everywhere ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][7][answer" resname="736][field_questions][7][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="sites"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> You can learn <bpt id="tjiid736-4">&lt;a href="https://www.eff.org/https-everywhere/rulesets"&gt;</bpt>how to write rules<ept id="tjiid736-4">&lt;/a&gt;</ept> that teach HTTPS Everywhere to support new sites. You can install these rules in your own browser or send them to us for possible inclusion in the official version.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="sites"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Vous pouvez apprendre à <bpt id="tjiid736-4">&lt;a href="https://www.eff.org/https-everywhere/rulesets"&gt;</bpt>écrire les règles<ept id="tjiid736-4">&lt;/a&gt;</ept> qui enseignent à HTTPS Everywhere de prendre en charge de nouveaux sites. Vous pouvez installer ces règles dans votre propre navigateur ou nous les envoyer pour qu'elles soient incluses éventuellement dans la version officielle.<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][8][question" resname="736][field_questions][8][question"><source xml:lang="en">What if the site doesn't support HTTPS, or only supports it for some activities, like entering credit card information?</source><target xml:lang="fr">Que faire si le site ne prend pas en charge le protocole HTTPS, ou qu’il le prend en charge uniquement pour certaines activités, comme la saisie des informations de carte de crédit ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][8][answer" resname="736][field_questions][8][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a href="https://letsencrypt.org/"&gt;</bpt>https://letsencrypt.org/<ept id="tjiid736-2">&lt;/a&gt;</ept><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-5">&lt;a name="partial"&gt;</bpt><ept id="tjiid736-5">&lt;/a&gt;</ept><bpt id="tjiid736-7">&lt;a name="amo"&gt;</bpt><ept id="tjiid736-7">&lt;/a&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>You could try to contact the site and point out that using HTTPS for all site features is an increasingly common practice nowadays and protects users (and sites) against a variety of Internet attacks. For instance, it defends against the ability of other people on a wifi network to spy on your use of the site or even take over your account. You can also point out that credit card numbers aren't the only information you consider private or sensitive.<ept id="tjiid736-9">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Sites like Google, Twitter, and Facebook now support HTTPS for non-financial information — for general privacy and security reasons.<ept id="tjiid736-11">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a href="https://letsencrypt.org/"&gt;</bpt>https://letsencrypt.org/<ept id="tjiid736-2">&lt;/a&gt;</ept><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-5">&lt;a name="partial"&gt;</bpt><ept id="tjiid736-5">&lt;/a&gt;</ept><bpt id="tjiid736-7">&lt;a name="amo"&gt;</bpt><ept id="tjiid736-7">&lt;/a&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>Vous pourriez essayer de contacter le site et souligner que l'utilisation de HTTPS pour toutes les fonctions du site est une pratique de plus en plus répandue de nos jours et qu’elle protège les utilisateurs (ainsi que les sites) contre une variété d'attaques en ligne. Par exemple, elle empêche que d'autres personnes sur un réseau Wi-Fi puissent espionner votre utilisation du site ou même prendre le contrôle de votre compte. Vous pouvez également remarquer que les numéros de cartes de crédit ne sont pas la seule information que vous jugez privée ou sensible.<ept id="tjiid736-9">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Des sites comme Google, Twitter et Facebook prennent désormais en charge le protocole HTTPS pour les informations qui ne sont pas financières, tant pour le respect de la vie privée que pour des raisons de sécurité.<ept id="tjiid736-11">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][9][question" resname="736][field_questions][9][question"><source xml:lang="en">Isn't it more expensive or slower for a site to support HTTPS compared to regular HTTP?</source><target xml:lang="fr">Offrir du HTTPS n'est-il pas plus coûteux ou plus lent pour un site, comparé à une connexion HTTP normale ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][9][answer" resname="736][field_questions][9][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="expensive"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>It can be, but some sites have been pleasantly surprised to see how practical it can be. Also, experts at Google are currently implementing several enhancements to the TLS protocol that make HTTPS dramatically faster; if these enhancements are added to the standard soon, the speed gap between the two should almost disappear. See <bpt id="tjiid736-6">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>Adam Langley's description of the HTTPS deployment situation<ept id="tjiid736-6">&lt;/a&gt;</ept> for more details on these issues. Notably, Langley states: "In order to [enable HTTPS by default for Gmail] we had to deploy no additional machines and no special hardware. On our production frontend machines, SSL/TLS accounts for less than 1% of the CPU load, less than 10KB of memory per connection and less than 2% of network overhead."<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>It used to be expensive to purchase a certificate for HTTPS usage, but they can now be obtained for free from <bpt id="tjiid736-10">&lt;a href="http://www.startssl.com/"&gt;</bpt>StartSSL<ept id="tjiid736-10">&lt;/a&gt;</ept> or <bpt id="tjiid736-12">&lt;a href="https://buy.wosign.com/free/"&gt;</bpt>WoSign<ept id="tjiid736-12">&lt;/a&gt;</ept>, and soon free certificate will be available from Let's Encrypt as well.<ept id="tjiid736-9">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="expensive"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Cela peut l'être effectivement, mais certains sites ont été agréablement surpris de voir combien cela peut être pratique. En outre, des experts de Google mettent actuellement en œuvre plusieurs améliorations au protocole TLS qui rendent HTTPS nettement plus rapide; si ces améliorations sont ajoutées bientôt au protocole HTTPS, l'écart de vitesse entre les deux devrait presque disparaître. Lisez la <bpt id="tjiid736-6">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>description de la situation de déploiement de HTTPS par Adam Langley<ept id="tjiid736-6">&lt;/a&gt;</ept> pour plus de détails sur ces questions. Notamment, Langley affirme :  « Pour [activer HTTPS par défaut pour Gmail] nous n'avons pas eu besoin de déployer de machine supplémentaire ou de matériel spécial. Sur nos ordinateurs frontaux de production, SSL/TLS consomme moins de 1 % de la charge CPU, moins de 10 Ko de mémoire par connexion et moins de 2 % de la charge du réseau. »<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>Avant, il était coûteux d'acheter un certificat pour utiliser HTTPS, mais ils peuvent maintenant être obtenus gratuitement par <bpt id="tjiid736-10">&lt;a href="http://www.startssl.com/"&gt;</bpt>StartSSL<ept id="tjiid736-10">&lt;/a&gt;</ept> ou <bpt id="tjiid736-12">&lt;a href="https://buy.wosign.com/free/"&gt;</bpt>WoSign<ept id="tjiid736-12">&lt;/a&gt;</ept>, et bientôt un certificat gratuit sera également disponible par Let's Encrypt.<ept id="tjiid736-9">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][10][question" resname="736][field_questions][10][question"><source xml:lang="en">Why should I use HTTPS Everywhere instead of just typing https:// at the beginning of site names?</source><target xml:lang="fr">Pourquoi devrais-je utiliser HTTPS Everywhere au lieu de taper simplement https:// avant le nom d’un site ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][10][answer" resname="736][field_questions][10][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="why"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Even if you normally type https://, HTTPS Everywhere might protect you if you occasionally forget. Also, it can rewrite other people's links that you follow. For instance, if you click on a link to <bpt id="tjiid736-4">&lt;a href="http://en.wikipedia.org/wiki/EFF_Pioneer_Award"&gt;</bpt>http://en.wikipedia.org/wiki/EFF_Pioneer_Award<ept id="tjiid736-4">&lt;/a&gt;</ept>, HTTPS Everywhere will automatically rewrite the link to <bpt id="tjiid736-6">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award"&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award<ept id="tjiid736-6">&lt;/a&gt;</ept>. Thus, you might get some protection even if you wouldn't have noticed that the target site is available in HTTPS.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="why"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Même si vous avez l'habitude de taper https://, HTTPS Everywhere peut vous protéger si jamais vous l'oubliez. En outre, il peut réécrire les liens tierces que vous suivez. Par exemple, si vous cliquez sur un lien vers <bpt id="tjiid736-4">&lt;a href="http://en.wikipedia.org/wiki/EFF_Pioneer_Award"&gt;</bpt>http://en.wikipedia.org/wiki/EFF_Pioneer_Award<ept id="tjiid736-4">&lt;/a&gt;</ept>, HTTPS Everywhere réécrira automatiquement le lien en <bpt id="tjiid736-6">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award"&gt;</bpt>https://secure.wikimedia.org/wikipedia/en/wiki/EFF_Pioneer_Award<ept id="tjiid736-6">&lt;/a&gt;</ept>. Ainsi, vous pourriez bénéficier d’une protection, même si vous n'aviez pas remarqué que le site cible était disponible en HTTPS.<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][11][question" resname="736][field_questions][11][question"><source xml:lang="en">Why does HTTPS Everywhere include rules for sites like PayPal that already require HTTPS on all their pages?</source><target xml:lang="fr">Pourquoi HTTPS Everywhere inclut-il des règles pour des sites comme PayPal qui utilisent déjà HTTPS sur toutes leurs pages ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][11][answer" resname="736][field_questions][11][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="sslstrip"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> HTTPS Everywhere, like the <bpt id="tjiid736-4">&lt;a href="http://www.w3.org/Security/wiki/Strict_Transport_Security"&gt;</bpt>HSTS protocol<ept id="tjiid736-4">&lt;/a&gt;</ept>, tries to address an attack called <bpt id="tjiid736-6">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>SSL stripping<ept id="tjiid736-6">&lt;/a&gt;</ept>. Users are only protected against the SSL stripping attack if their browsers don't even <bpt id="tjiid736-8">&lt;em&gt;</bpt>try<ept id="tjiid736-8">&lt;/em&gt;</ept> to connect to the HTTP version of the site — even if the site would have redirected them to the HTTPS version. With HTTPS Everywhere, the browser won't even attempt the insecure HTTP connection, even if that's what you ask it to do. (Note that HTTPS Everywhere currently does not include a comprehensive list of such sites, which are mainly financial institutions.)<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="sslstrip"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept>HTTPS Everywhere, tout comme le <bpt id="tjiid736-4">&lt;a href="http://www.w3.org/Security/wiki/Strict_Transport_Security"&gt;</bpt>protocole HSTS<ept id="tjiid736-4">&lt;/a&gt;</ept>, tente de répondre à une attaque appelée <bpt id="tjiid736-6">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>SSL stripping<ept id="tjiid736-6">&lt;/a&gt;</ept>. Les utilisateurs sont protégés contre une attaque SSL stripping uniquement si leurs navigateurs ne <bpt id="tjiid736-8">&lt;em&gt;</bpt>tentent<ept id="tjiid736-8">&lt;/em&gt;</ept>même pas de se connecter à la version HTTP du site - même si le site les aurait redirigé vers la version HTTPS. Avec HTTPS Everywhere, le navigateur ne tentera pas de connexion HTTP non sécurisée, même si vous le lui demandez. (Notez que HTTPS Everywhere n’inclut pas actuellement de liste exhaustive de ces sites, qui sont principalement des établissements financiers.)<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][12][question" resname="736][field_questions][12][question"><source xml:lang="en">What do the different colors for rulesets in the toolbar menu mean?</source><target xml:lang="fr">Que signifient les différentes couleurs pour les jeux de règles dans le menu de la barre d'outils ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][12][answer" resname="736][field_questions][12][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="colors"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>The colors are:<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-7">&lt;p&gt;</bpt>Dark Green: ruleset was active in loading the resources in the current page.<ept id="tjiid736-7">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>Light Green: ruleset was ready to prevent HTTP loads in the current page, but everything that the ruleset would have covered was loaded over HTTPS anyway (in the code, light green is called a "moot rule").<ept id="tjiid736-9">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Dark Brown or Clockwise Red Arrow: broken rule -- the ruleset is active but the server is redirecting at least some URLs back from HTTPS to HTTP.<ept id="tjiid736-11">&lt;/p&gt;</ept><bpt id="tjiid736-13">&lt;p&gt;</bpt>Gray: the ruleset is disabled.<ept id="tjiid736-13">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><ept id="tjiid736-1">&lt;/p&gt;</ept><bpt id="tjiid736-3">&lt;a name="colors"&gt;</bpt><ept id="tjiid736-3">&lt;/a&gt;</ept><bpt id="tjiid736-5">&lt;p&gt;</bpt>Les couleurs signifient ceci :<ept id="tjiid736-5">&lt;/p&gt;</ept><bpt id="tjiid736-7">&lt;p&gt;</bpt>Vert foncé : le jeu de règles était actif dans le chargement des ressources de la page actuelle.<ept id="tjiid736-7">&lt;/p&gt;</ept><bpt id="tjiid736-9">&lt;p&gt;</bpt>Vert clair : le jeu de règles était prêt à empêcher les charges HTTP de la page en cours, mais tout ce qu'il aurait pu couvrir a été de toute façon chargé via HTTPS (dans le code, le vert clair est appelé une « règle théorique »).<ept id="tjiid736-9">&lt;/p&gt;</ept><bpt id="tjiid736-11">&lt;p&gt;</bpt>Βrun foncé ou flèche rouge dans le sens horaire : règle brisée ; le jeu de règles est actif, mais le serveur réoriente certaines URL de HTTPS vers HTTP.<ept id="tjiid736-11">&lt;/p&gt;</ept><bpt id="tjiid736-13">&lt;p&gt;</bpt>Gris : le jeu de règles est désactivé.<ept id="tjiid736-13">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][13][question" resname="736][field_questions][13][question"><source xml:lang="en">I'm having a problem installing the browser extension.</source><target xml:lang="fr">J'ai un problème d'installation pour l'extension HTTPS Everywhere.</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][13][answer" resname="736][field_questions][13][answer"><source xml:lang="en"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept> Some people report that installing HTTPS Everywhere gives them the error: "The addon could not be downloaded because of a connection failure on www.eff.org." This may be caused by Avast anti-virus, which blocks installation of browser extensions. You may be able to <bpt id="tjiid736-4">&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/https-everywhere/"&gt;</bpt>install from addons.mozilla.org instead<ept id="tjiid736-4">&lt;/a&gt;</ept>.<ept id="tjiid736-1">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid736-1">&lt;p&gt;</bpt><bpt id="tjiid736-2">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid736-2">&lt;/a&gt;</ept>Certains utilisateurs signalent que l'installation de HTTPS Everywhere leur renvoie l'erreur : « The addon could not be downloaded because of a connection failure on www.eff.org. » (L'extension n'a pas pu être téléchargée en raison d'un échec de connexion sur www.eff.org.) Cela peut provenir de l'antivirus Avast, qui bloque l'installation d'extensions de navigateur. Il est possible que vous puissiez l'<bpt id="tjiid736-4">&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/https-everywhere/"&gt;</bpt>installer à partir de addons.mozilla.org<ept id="tjiid736-4">&lt;/a&gt;</ept>.<ept id="tjiid736-1">&lt;/p&gt;</ept></target><note>Answer</note></trans-unit><trans-unit id="736][field_questions][14][question" resname="736][field_questions][14][question"><source xml:lang="en">How do I add my own site to HTTPS Everywhere?</source><target xml:lang="fr">Comment puis-je ajouter mon propre site à HTTPS Everywhere ?</target><note>Question</note></trans-unit><trans-unit id="736][field_questions][14][answer" resname="736][field_questions][14][answer"><source xml:lang="en">We're excited that you want your site in HTTPS Everywhere! However, remember that not everyone who visits your site has our extension installed. If you run a web site, you can make it default to HTTPS for everyone, not just HTTPS Everywhere users. And it's less work! The steps you should take, in order, are:

<bpt id="tjiid736-1">&lt;ol&gt;</bpt><bpt id="tjiid736-2">&lt;li&gt;</bpt>Set up a <bpt id="tjiid736-3">&lt;a href="https://www.sslshopper.com/apache-redirect-http-to-https.html"&gt;</bpt>redirect<ept id="tjiid736-3">&lt;/a&gt;</ept> from HTTP to HTTPS on your site.<ept id="tjiid736-2">&lt;/li&gt;</ept>
	<bpt id="tjiid736-6">&lt;li&gt;</bpt><bpt id="tjiid736-7">&lt;a href="https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html"&gt;</bpt>Add the Strict-Transport-Security (HSTS) header on your site<ept id="tjiid736-7">&lt;/a&gt;</ept>.<ept id="tjiid736-6">&lt;/li&gt;</ept>
	<bpt id="tjiid736-10">&lt;li&gt;</bpt><bpt id="tjiid736-11">&lt;a href="https://hstspreload.appspot.com/"&gt;</bpt>Add your site to the HSTS Preload list<ept id="tjiid736-11">&lt;/a&gt;</ept>.<ept id="tjiid736-10">&lt;/li&gt;</ept>
<ept id="tjiid736-1">&lt;/ol&gt;</ept>

These steps will give your site much better protection that adding it to HTTPS Everywhere. Generally speaking, once you are done, there is no need to add your site to HTTPS Everywhere. However, if you would still like to, please follow the <bpt id="tjiid736-15">&lt;a href="https://eff.org/https-everywhere/rulesets"&gt;</bpt>instructions on writing rulesets<ept id="tjiid736-15">&lt;/a&gt;</ept>, and indicate that you are the author of the web site when you submit your pull request.</source><target xml:lang="fr">Nous sommes ravis de savoir que vous souhaitez inclure votre site dans HTTPS Everywhere ! Rappelez-vous cependant que tous ceux qui visitent votre site n'ont pas nécessairement installé notre extension. Si vous gérez un site Web, vous pouvez faire en sorte qu'il utilise HTTPS par défaut pour tout le monde, pas juste pour les utilisateurs de HTTPS Everywhere. Et cela représente encore moins de travail ! Les étapes que vous devez suivre, sont, dans l'ordre, les suivantes :

<bpt id="tjiid736-1">&lt;ol&gt;</bpt><bpt id="tjiid736-2">&lt;li&gt;</bpt>Mettre en place une <bpt id="tjiid736-3">&lt;a href="https://www.sslshopper.com/apache-redirect-http-to-https.html"&gt;</bpt>redirection<ept id="tjiid736-3">&lt;/a&gt;</ept> de HTTP à HTTPS sur votre site.<ept id="tjiid736-2">&lt;/li&gt;</ept>
	<bpt id="tjiid736-6">&lt;li&gt;</bpt><bpt id="tjiid736-7">&lt;a href="https://raymii.org/s/tutorials/HTTP_Strict_Transport_Security_for_Apache_NGINX_and_Lighttpd.html"&gt;</bpt>Ajouter l'entête HTTP Strict Transport Security (HSTS) à votre site<ept id="tjiid736-7">&lt;/a&gt;</ept>.<ept id="tjiid736-6">&lt;/li&gt;</ept>
	<bpt id="tjiid736-10">&lt;li&gt;</bpt><bpt id="tjiid736-11">&lt;a href="https://hstspreload.appspot.com/"&gt;</bpt>Ajouter votre site à la liste préchargée de HSTS<ept id="tjiid736-11">&lt;/a&gt;</ept>.<ept id="tjiid736-10">&lt;/li&gt;</ept>
<ept id="tjiid736-1">&lt;/ol&gt;</ept>

Ces étapes donneront à votre site une bien meilleure protection que son ajout à HTTPS Everywhere. D'une manière générale, une fois que vous avez terminé, il n'y a pas besoin d'ajouter votre site à HTTPS Everywhere. Si toutefois vous le souhaitez, veuillez suivre les <bpt id="tjiid736-15">&lt;a href="https://eff.org/https-everywhere/rulesets"&gt;</bpt>instructions sur l'écriture de jeux de règles<ept id="tjiid736-15">&lt;/a&gt;</ept>, et indiquer que vous êtes l'auteur du site Web lorsque vous soumettez votre demande de tirage (pull request).</target><note>Answer</note></trans-unit><trans-unit id="736][title_field][0][value" resname="736][title_field][0][value"><source xml:lang="en">HTTPS Everywhere FAQ</source><target xml:lang="fr">FAQ de HTTPS Everywhere</target><note>Title</note></trans-unit></group><group id="737"><note>HTTPS Everywhere</note><trans-unit id="737][body][0][value" resname="737][body][0][value"><source xml:lang="en"><bpt id="tjiid737-1">&lt;p&gt;</bpt>HTTPS Everywhere is produced as a collaboration between <bpt id="tjiid737-2">&lt;a href="https://www.torproject.org"&gt;</bpt>The Tor Project<ept id="tjiid737-2">&lt;/a&gt;</ept> and the <bpt id="tjiid737-4">&lt;a href="https://eff.org/"&gt;</bpt>Electronic Frontier Foundation<ept id="tjiid737-4">&lt;/a&gt;</ept>. Many sites on the web offer some limited support for encryption over <bpt id="tjiid737-6">&lt;a href="https://en.wikipedia.org/wiki/HTTP_Secure"&gt;</bpt>HTTPS<ept id="tjiid737-6">&lt;/a&gt;</ept>, but make it difficult to use. For instance, they may default to unencrypted HTTP, or fill encrypted pages with links that go back to the unencrypted site. The HTTPS Everywhere extension fixes these problems by using <bpt id="tjiid737-8">&lt;a href="https://www.xkcd.com/208"&gt;</bpt>clever technology<ept id="tjiid737-8">&lt;/a&gt;</ept> to rewrite requests to these sites to HTTPS. Information about how to access the project's Git repository and get involved in development is <bpt id="tjiid737-10">&lt;a href="/https-everywhere/development"&gt;</bpt>here<ept id="tjiid737-10">&lt;/a&gt;</ept>.<ept id="tjiid737-1">&lt;/p&gt;</ept><bpt id="tjiid737-13">&lt;p&gt;</bpt><bpt id="tjiid737-14">&lt;strong&gt;</bpt>Webmasters and prospective contributors:<ept id="tjiid737-14">&lt;/strong&gt;</ept> Check the <bpt id="tjiid737-16">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt>HTTPS Everywhere Atlas<ept id="tjiid737-16">&lt;/a&gt;</ept> to quickly see how existing HTTPS Everywhere rules affect sites you care about! HTTPS Everywhere is governed by EFF's <bpt id="tjiid737-18">&lt;a href="https://www.eff.org/code/privacy"&gt;</bpt>Privacy Policy for Software<ept id="tjiid737-18">&lt;/a&gt;</ept>.<ept id="tjiid737-13">&lt;/p&gt;</ept><bpt id="tjiid737-21">&lt;p&gt;</bpt><bpt id="tjiid737-22">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid737-22">&lt;/a&gt;</ept> <bpt id="tjiid737-24">&lt;strong&gt;</bpt>Problems Installing: <ept id="tjiid737-24">&lt;/strong&gt;</ept>Some people report that installing HTTPS Everywhere gives them the error: "The addon could not be downloaded because of a connection failure on <bpt id="tjiid737-26">&lt;span class="moz-txt-link-abbreviated"&gt;</bpt>www.eff.org<ept id="tjiid737-26">&lt;/span&gt;</ept>." <bpt id="tjiid737-28">&lt;a href="https://kittens.eff.org/https-everywhere/faq#problems-installing"&gt;</bpt>See this FAQ entry for help<ept id="tjiid737-28">&lt;/a&gt;</ept>.<ept id="tjiid737-21">&lt;/p&gt;</ept><bpt id="tjiid737-31">&lt;p&gt;</bpt><bpt id="tjiid737-32">&lt;a href="#" id="https-everywhere-more"&gt;</bpt>Read More About HTTPS Everywhere »<ept id="tjiid737-32">&lt;/a&gt;</ept><ept id="tjiid737-31">&lt;/p&gt;</ept><bpt id="tjiid737-35">&lt;div id="https-everywhere-hidden"&gt;</bpt><bpt id="tjiid737-36">&lt;h2&gt;</bpt>Questions and Caveats<ept id="tjiid737-36">&lt;/h2&gt;</ept><bpt id="tjiid737-38">&lt;p&gt;</bpt>Sadly, many sites still include a lot of content from third party domains that is not available over HTTPS. As always, if the browser's lock icon <bpt id="tjiid737-39">&lt;a href="https://www.eff.org/https-everywhere/faq#mixed-content"&gt;</bpt>is broken or carries an exclamation mark<ept id="tjiid737-39">&lt;/a&gt;</ept>, you may remain vulnerable to some adversaries that use active attacks or traffic analysis. However, the effort that would be required to eavesdrop on your browsing should still be usefully increased. <bpt id="tjiid737-41">&lt;strong&gt;</bpt>Update: in recent versions of Firefox, Mozilla has removed the broken padlock indicator. Now, the only difference between a secure and insecure HTTPS deployment is the blue or green tint on the left of the address bar for secure deployments<ept id="tjiid737-41">&lt;/strong&gt;</ept> Answers to common questions may be on the <bpt id="tjiid737-43">&lt;a href="/https-everywhere/faq/"&gt;</bpt>frequently asked questions<ept id="tjiid737-43">&lt;/a&gt;</ept> page. <bpt id="tjiid737-45">&lt;strong&gt;</bpt>HTTPS Everywhere can protect you only when you're using sites that support HTTPS and for which HTTPS Everywhere include a <bpt id="tjiid737-46">&lt;a href="/https-everywhere/rulesets"&gt;</bpt>ruleset<ept id="tjiid737-46">&lt;/a&gt;</ept>.<ept id="tjiid737-45">&lt;/strong&gt;</ept> If sites you use don't support HTTPS, ask the site operators to add it; only the site operator is able to enable HTTPS. There is more information and instruction on how server operators can do that in the EFF article <bpt id="tjiid737-49">&lt;a href="/pages/how-deploy-https-correctly"&gt;</bpt>How to Deploy HTTPS Correctly<ept id="tjiid737-49">&lt;/a&gt;</ept>.<ept id="tjiid737-38">&lt;/p&gt;</ept><bpt id="tjiid737-52">&lt;h2&gt;</bpt>Development And Writing your own Rulesets<ept id="tjiid737-52">&lt;/h2&gt;</ept><bpt id="tjiid737-54">&lt;p&gt;</bpt><bpt id="tjiid737-55">&lt;strong&gt;</bpt>Webmasters and prospective contributors:<ept id="tjiid737-55">&lt;/strong&gt;</ept> Check the <bpt id="tjiid737-57">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt>HTTPS Everywhere Atlas<ept id="tjiid737-57">&lt;/a&gt;</ept> to quickly see how existing HTTPS Everywhere rules affect sites you care about! You can help us test forthcoming site support and new features by installing the <bpt id="tjiid737-59">&lt;a href="/files/https-everywhere-devel.xpi"&gt;</bpt>development branch<ept id="tjiid737-59">&lt;/a&gt;</ept> of the extension. HTTPS Everywhere uses small ruleset files to define which domains are redirected to https, and how. If you'd like to write your own ruleset, you can find out how to do that <bpt id="tjiid737-61">&lt;a href="/https-everywhere/rulesets"&gt;</bpt>here<ept id="tjiid737-61">&lt;/a&gt;</ept>. Information about how to access the project's Git repository and get involved in development is <bpt id="tjiid737-63">&lt;a href="/https-everywhere/development"&gt;</bpt>here<ept id="tjiid737-63">&lt;/a&gt;</ept>. Send feedback on this project to the <bpt id="tjiid737-65">&lt;tt&gt;</bpt>https-everywhere AT eff.org<ept id="tjiid737-65">&lt;/tt&gt;</ept> mailing list. Note that this is a public and publicly-archived mailing list. You can also <bpt id="tjiid737-67">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere"&gt;</bpt>subscribe<ept id="tjiid737-67">&lt;/a&gt;</ept>. Send new rewrite rules or fixes to existing rewrite rules to the <bpt id="tjiid737-69">&lt;tt&gt;</bpt>https-everywhere-rules AT eff.org<ept id="tjiid737-69">&lt;/tt&gt;</ept> mailing list. Note that this is a public and publicly-archived mailing list. You can also <bpt id="tjiid737-71">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere-rules"&gt;</bpt>subscribe<ept id="tjiid737-71">&lt;/a&gt;</ept>.<ept id="tjiid737-54">&lt;/p&gt;</ept><ept id="tjiid737-35">&lt;/div&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid737-1">&lt;p&gt;</bpt>HTTPS Everywhere est le produit d'une collaboration entre le <bpt id="tjiid737-2">&lt;a href="https://www.torproject.org"&gt;</bpt>projet Tor<ept id="tjiid737-2">&lt;/a&gt;</ept> et l'<bpt id="tjiid737-4">&lt;a href="https://eff.org/"&gt;</bpt>Electronic Frontier Foundation<ept id="tjiid737-4">&lt;/a&gt;</ept>. Beaucoup de sites Web offrent un support limité pour le chiffrement via <bpt id="tjiid737-6">&lt;a href="https://en.wikipedia.org/wiki/HTTP_Secure"&gt;</bpt>HTTPS<ept id="tjiid737-6">&lt;/a&gt;</ept>, mais le rendent difficile d’utilisation. Par exemple, ils offrent par défaut une connexion HTTP non chiffrée, ou remplissent les pages chiffrées de liens qui remontent vers le site non chiffré. L'extension HTTPS Everywhere résout ces problèmes en utilisant une <bpt id="tjiid737-8">&lt;a href="https://www.xkcd.com/208"&gt;</bpt>technologie intelligente<ept id="tjiid737-8">&lt;/a&gt;</ept> de réécriture des requêtes sur ces sites en HTTPS. Des informations sur comment accéder au dépôt Git du projet et s'impliquer au développement sont disponibles <bpt id="tjiid737-10">&lt;a href="/https-everywhere/development"&gt;</bpt>ici<ept id="tjiid737-10">&lt;/a&gt;</ept>.<ept id="tjiid737-1">&lt;/p&gt;</ept><bpt id="tjiid737-13">&lt;p&gt;</bpt><bpt id="tjiid737-14">&lt;strong&gt;</bpt>Avis aux webmasters et contributeurs potentiels :<ept id="tjiid737-14">&lt;/strong&gt;</ept> Consultez <bpt id="tjiid737-16">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt>HTTPS Everywhere Atlas<ept id="tjiid737-16">&lt;/a&gt;</ept> pour vérifier rapidement comment les règles de HTTPS Everywhere affectent les sites qui vous intéressent ! HTTPS Everywhere est régi par la <bpt id="tjiid737-18">&lt;a href="https://www.eff.org/code/privacy"&gt;</bpt>politique de confidentialité de l'EFF pour les programmes logiciels<ept id="tjiid737-18">&lt;/a&gt;</ept>.<ept id="tjiid737-13">&lt;/p&gt;</ept><bpt id="tjiid737-21">&lt;p&gt;</bpt><bpt id="tjiid737-22">&lt;a name="problems-installing"&gt;</bpt><ept id="tjiid737-22">&lt;/a&gt;</ept> <bpt id="tjiid737-24">&lt;strong&gt;</bpt>Problèmes d'installation :<ept id="tjiid737-24">&lt;/strong&gt;</ept>Certains utilisateurs rapportent que l'installation de HTTPS Everywhere renvoie l'erreur :  « The addon could not be downloaded because of a connection failure on <bpt id="tjiid737-26">&lt;span class="moz-txt-link-abbreviated"&gt;</bpt>www.eff.org<ept id="tjiid737-26">&lt;/span&gt;</ept>. » (L'extension n'a pas pu être téléchargée en raison d'un échec de connexion sur www.eff.org.) <bpt id="tjiid737-28">&lt;a href="https://kittens.eff.org/https-everywhere/faq#problems-installing"&gt;</bpt>Lire cette entrée de la FAQ pour plus d'assistance<ept id="tjiid737-28">&lt;/a&gt;</ept>.<ept id="tjiid737-21">&lt;/p&gt;</ept><bpt id="tjiid737-31">&lt;p&gt;</bpt><bpt id="tjiid737-32">&lt;a href="#" id="https-everywhere-more"&gt;</bpt>En savoir plus sur  HTTPS Everywhere » <ept id="tjiid737-32">&lt;/a&gt;</ept><ept id="tjiid737-31">&lt;/p&gt;</ept><bpt id="tjiid737-35">&lt;div id="https-everywhere-hidden"&gt;</bpt><bpt id="tjiid737-36">&lt;h2&gt;</bpt>Questions et mises en garde<ept id="tjiid737-36">&lt;/h2&gt;</ept><bpt id="tjiid737-38">&lt;p&gt;</bpt>Malheureusement, de nombreux sites incluent encore beaucoup de contenu de sites tiers qui n'est pas disponible via HTTPS. Comme toujours, si l'icône de verrou du navigateur <bpt id="tjiid737-39">&lt;a href="https://www.eff.org/https-everywhere/faq#mixed-content"&gt;</bpt>est cassé ou porte un point d'exclamation<ept id="tjiid737-39">&lt;/a&gt;</ept>, vous pouvez demeurer vulnérables à certains adversaires qui utilisent des attaques actives ou l'analyse de trafic. Toutefois, l'effort nécessaire pour espionner votre navigation reste accru. <bpt id="tjiid737-41">&lt;strong&gt;</bpt>Mise à jour : dans les versions récentes de Firefox, Mozilla a enlevé l'indicateur du cadenas cassé. Maintenant, la seule différence entre un déploiement HTTPS sécurisé et non sécurisé est que la teinte bleue ou verte sur la gauche de la barre d'adresse pour montrer les déploiements sécurisés.<ept id="tjiid737-41">&lt;/strong&gt;</ept> Les réponses à des questions courantes peuvent se trouver sur la page des <bpt id="tjiid737-43">&lt;a href="/https-everywhere/faq/"&gt;</bpt>questions fréquemment posées<ept id="tjiid737-43">&lt;/a&gt;</ept>. <bpt id="tjiid737-45">&lt;strong&gt;</bpt>HTTPS Everywhere peut vous protéger uniquement lorsque vous utilisez des sites prenant en charge le protocole HTTPS et pour lesquels HTTPS Everywhere inclue un<bpt id="tjiid737-46">&lt;a href="/https-everywhere/rulesets"&gt;</bpt> jeu de règles<ept id="tjiid737-46">&lt;/a&gt;</ept>.<ept id="tjiid737-45">&lt;/strong&gt;</ept> Si les sites que vous visitez ne prennent pas en charge HTTPS, demandez aux opérateurs du site de l'ajouter ; seul l’opérateur du site est en mesure d'activer HTTPS. Vous trouverez plus d'informations et d'instructions sur comment un opérateur de serveur peut faire cela dans l'article de l'EFF <bpt id="tjiid737-49">&lt;a href="/pages/how-deploy-https-correctly"&gt;</bpt> Comment déployer HTTPS correctement.<ept id="tjiid737-49">&lt;/a&gt;</ept>.<ept id="tjiid737-38">&lt;/p&gt;</ept><bpt id="tjiid737-52">&lt;h2&gt;</bpt>Développement et écriture de votre propre jeu de règles<ept id="tjiid737-52">&lt;/h2&gt;</ept><bpt id="tjiid737-54">&lt;p&gt;</bpt><bpt id="tjiid737-55">&lt;strong&gt;</bpt>Avis aux webmasters et aux éventuels contributeurs : <ept id="tjiid737-55">&lt;/strong&gt;</ept>Consultez <bpt id="tjiid737-57">&lt;a href="https://www.eff.org/https-everywhere/atlas"&gt;</bpt>HTTPS Everywhere Atlas<ept id="tjiid737-57">&lt;/a&gt;</ept> pour voir rapidement comment les règles actuelles de HTTPS Everywhere règles affectent les sites qui vous intéressent ! Vous pouvez nous aider à tester la future prise en charge de sites et les nouvelles fonctionnalités en installant la <bpt id="tjiid737-59">&lt;a href="/files/https-everywhere-devel.xpi"&gt;</bpt>branche de développement<ept id="tjiid737-59">&lt;/a&gt;</ept> de l'extension. HTTPS Everywhere utilise des fichiers de jeu de règles pour définir quels domaines sont redirigés vers HTTPS et comment. Si vous souhaitez écrire votre propre jeu de règles, vous trouverez comment le faire <bpt id="tjiid737-61">&lt;a href="/https-everywhere/rulesets"&gt;</bpt>ici<ept id="tjiid737-61">&lt;/a&gt;</ept>. Des informations sur comment accéder au dépôt Git du projet et comment s'impliquer dans le développement sont disponibles <bpt id="tjiid737-63">&lt;a href="/https-everywhere/development"&gt;</bpt>ici<ept id="tjiid737-63">&lt;/a&gt;</ept>. Envoyez vos commentaires sur ce projet sur la liste de diffusion <bpt id="tjiid737-65">&lt;tt&gt;</bpt>https-everywhere @ eff.org<ept id="tjiid737-65">&lt;/tt&gt;</ept>. Notez qu'il s'agit d'une liste de diffusion publique et archivée publiquement. Vous pouvez également <bpt id="tjiid737-67">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere"&gt;</bpt>vous y abonner<ept id="tjiid737-67">&lt;/a&gt;</ept>. Envoyez de nouvelles règles de réécriture ou des correctifs aux règles actuelles de réécriture sur la liste de diffusion <bpt id="tjiid737-69">&lt;tt&gt;</bpt>https-everywhere @ eff.org<ept id="tjiid737-69">&lt;/tt&gt;</ept>. Notez qu'il s'agit d'une liste de diffusion publique et archivée publiquement. Vous pouvez également <bpt id="tjiid737-71">&lt;a href="https://lists.eff.org/mailman/listinfo/https-everywhere-rules"&gt;</bpt>vous y abonner<ept id="tjiid737-71">&lt;/a&gt;</ept>.<ept id="tjiid737-54">&lt;/p&gt;</ept><ept id="tjiid737-35">&lt;/div&gt;</ept></target><note>Body</note></trans-unit><trans-unit id="737][title_field][0][value" resname="737][title_field][0][value"><source xml:lang="en">HTTPS Everywhere</source><target xml:lang="fr">HTTPS Everywhere</target><note>Title</note></trans-unit></group><group id="739"><note>How to Deploy HTTPS Correctly</note><trans-unit id="739][body][0][value" resname="739][body][0][value"><source xml:lang="en"><bpt id="tjiid739-1">&lt;p class="eff-light-blue eff-grey"&gt;</bpt>By <bpt id="tjiid739-2">&lt;a href="http://noncombatant.org"&gt;</bpt>Chris Palmer<ept id="tjiid739-2">&lt;/a&gt;</ept> and <bpt id="tjiid739-4">&lt;a href="/about/staff/yan-zhu"&gt;</bpt>Yan Zhu<ept id="tjiid739-4">&lt;/a&gt;</ept><ept id="tjiid739-1">&lt;/p&gt;</ept><bpt id="tjiid739-7">&lt;p&gt;</bpt><bpt id="tjiid739-8">&lt;em&gt;</bpt>Originally published on 15 Nov 2010. Revised on 12 Dec 2013.<ept id="tjiid739-8">&lt;/em&gt;</ept><ept id="tjiid739-7">&lt;/p&gt;</ept><bpt id="tjiid739-11">&lt;p&gt;</bpt>Internet technologists have always known that HTTP is insecure, causing many risks to users. Because HTTP traffic is unencrypted, any data sent over HTTP can be read and modified by anyone who has access to the network. As revealed by the Snowden NSA surveillance documents, HTTP traffic can also be collected and searched by government agencies without notice to users or webmasters. Given these risks, EFF believes that every website should support HTTPS on all pages as soon as possible.<ept id="tjiid739-11">&lt;/p&gt;</ept><bpt id="tjiid739-13">&lt;p&gt;</bpt>While HTTPS has long existed as the bare minimum for web security, some websites have been slow to adopt it. In part, this is because correctly and completely serving an application over HTTPS takes some care.<ept id="tjiid739-13">&lt;/p&gt;</ept><bpt id="tjiid739-15">&lt;p&gt;</bpt>This article is designed to encourage and assist website operators in implementing and improving HTTPS support. Although no precaution will defend against all threats, supporting HTTPS will protect users from a wide range of common attacks.<ept id="tjiid739-15">&lt;/p&gt;</ept><bpt id="tjiid739-17">&lt;h2&gt;</bpt>Background<ept id="tjiid739-17">&lt;/h2&gt;</ept><bpt id="tjiid739-19">&lt;p&gt;</bpt>HTTPS provides three security guarantees:<ept id="tjiid739-19">&lt;/p&gt;</ept><bpt id="tjiid739-21">&lt;ol&gt;</bpt><bpt id="tjiid739-22">&lt;li&gt;</bpt><bpt id="tjiid739-23">&lt;strong&gt;</bpt>Server authentication<ept id="tjiid739-23">&lt;/strong&gt;</ept> allows users to have some confidence that they are talking to the true application server. Without this guarantee, there can be no guarantee of confidentiality or integrity.<ept id="tjiid739-22">&lt;/li&gt;</ept><bpt id="tjiid739-26">&lt;li&gt;</bpt><bpt id="tjiid739-27">&lt;strong&gt;</bpt>Data confidentiality<ept id="tjiid739-27">&lt;/strong&gt;</ept> means that eavesdroppers cannot understand the content of the communications between the user's browser and the web server, because the data is encrypted.<ept id="tjiid739-26">&lt;/li&gt;</ept><bpt id="tjiid739-30">&lt;li&gt;</bpt><bpt id="tjiid739-31">&lt;strong&gt;</bpt>Data integrity<ept id="tjiid739-31">&lt;/strong&gt;</ept> means that a network attacker cannot damage or alter the content of the communications between the user's browser and the web server, because they are validated with a cryptographic <bpt id="tjiid739-33">&lt;em&gt;</bpt><bpt id="tjiid739-34">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Message_authentication_code"&gt;</bpt>message authentication code<ept id="tjiid739-34">&lt;/a&gt;</ept><ept id="tjiid739-33">&lt;/em&gt;</ept>.<ept id="tjiid739-30">&lt;/li&gt;</ept><ept id="tjiid739-21">&lt;/ol&gt;</ept><bpt id="tjiid739-39">&lt;p&gt;</bpt><bpt id="tjiid739-40">&lt;strong&gt;</bpt>HTTP provides no security guarantees<ept id="tjiid739-40">&lt;/strong&gt;</ept>, and applications that use it <bpt id="tjiid739-42">&lt;strong&gt;</bpt>cannot possibly provide users any security<ept id="tjiid739-42">&lt;/strong&gt;</ept>. When using a web application hosted via HTTP, people have no way of knowing whether they are talking to the true application server, nor can they be sure attackers have not read or modified communications between the user's computer and the server.<ept id="tjiid739-39">&lt;/p&gt;</ept><bpt id="tjiid739-45">&lt;h2&gt;</bpt>Modes of Attack and Defense<ept id="tjiid739-45">&lt;/h2&gt;</ept><bpt id="tjiid739-47">&lt;p&gt;</bpt>However users connect to the Internet, there are a variety of people who can attack them--whether spying on them, impersonating them, tampering with their communications, or all three of these. The wifi network operator can do this; any ISP in the path between client and server can do it; anyone who can reconfigure the wifi router or another router can do it; and often, anyone else using the same network can do it, too.<ept id="tjiid739-47">&lt;/p&gt;</ept><bpt id="tjiid739-49">&lt;p&gt;</bpt><bpt id="tjiid739-50">&lt;a href="http://codebutler.com/firesheep-a-day-later/"&gt;</bpt>Firesheep<ept id="tjiid739-50">&lt;/a&gt;</ept> is an example of a <bpt id="tjiid739-52">&lt;em&gt;</bpt>passive network attack<ept id="tjiid739-52">&lt;/em&gt;</ept>: it eavesdrops on the contents of network communications between browser and server, but does not re-route or modify them. Government surveillance programs such as <bpt id="tjiid739-54">&lt;a href="http://www.theguardian.com/world/2013/jul/31/nsa-top-secret-program-online-data"&gt;</bpt>XKeyscore<ept id="tjiid739-54">&lt;/a&gt;</ept> also use passive attacks on HTTP traffic to collect massive amounts of online communication data.<ept id="tjiid739-49">&lt;/p&gt;</ept><bpt id="tjiid739-57">&lt;p&gt;</bpt>By contrast, other freely-available tools perform <bpt id="tjiid739-58">&lt;em&gt;</bpt>active network attacks<ept id="tjiid739-58">&lt;/em&gt;</ept>, in which the attacker does modify the contents of and/or re-route communications. These tools range from serious, such as <bpt id="tjiid739-60">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>sslstrip<ept id="tjiid739-60">&lt;/a&gt;</ept>, to silly, like <bpt id="tjiid739-62">&lt;a href="http://www.ex-parrot.com/pete/upside-down-ternet.html"&gt;</bpt>the Upside-Down-Ternet<ept id="tjiid739-62">&lt;/a&gt;</ept>. Although Upside-Down-Ternet is a funny prank, it is technically identical to potentially more damaging attacks such as an attack that injects malicious code or incorrect information into web pages; at the same time, it shows that such attacks are easy enough to be jokes. Free wifi hotspots have been known to inject advertisements dynamically into web pages that users read--indicating that active network attacks are a viable business model. Tools like <bpt id="tjiid739-64">&lt;a href="http://www.oxid.it/cain.html"&gt;</bpt>Cain and Abel<ept id="tjiid739-64">&lt;/a&gt;</ept> enable a range of attacks, including re-routing local network traffic through the attacker's system. (Also see <bpt id="tjiid739-66">&lt;a href="http://arpspoof.sourceforge.net/"&gt;</bpt>Arpspoof<ept id="tjiid739-66">&lt;/a&gt;</ept> and <bpt id="tjiid739-68">&lt;a href="http://www.monkey.org/%7Edugsong/dsniff/"&gt;</bpt>dsniff<ept id="tjiid739-68">&lt;/a&gt;</ept>.)<ept id="tjiid739-57">&lt;/p&gt;</ept><bpt id="tjiid739-71">&lt;p&gt;</bpt>Only a mechanism that provides (at least) authentication, confidentiality, and integrity can defend against a range of attacks. HTTPS is currently our best option for web applications.<ept id="tjiid739-71">&lt;/p&gt;</ept><bpt id="tjiid739-73">&lt;p&gt;</bpt>However, there are some potential pitfalls that site operators must avoid in order to deploy HTTPS securely.<ept id="tjiid739-73">&lt;/p&gt;</ept><bpt id="tjiid739-75">&lt;h2&gt;</bpt>Mixed Content<ept id="tjiid739-75">&lt;/h2&gt;</ept><bpt id="tjiid739-77">&lt;p&gt;</bpt>When hosting an application over HTTPS, there can be no <bpt id="tjiid739-78">&lt;em&gt;</bpt>mixed content<ept id="tjiid739-78">&lt;/em&gt;</ept>; that is, all content in the page must be fetched via HTTPS. It is common to see partial HTTPS support on sites, in which the main pages are fetched via HTTPS but some or all of the media elements, stylesheets, and JavaScript in the page are fetched via HTTP.<ept id="tjiid739-77">&lt;/p&gt;</ept><bpt id="tjiid739-81">&lt;p&gt;</bpt>This is unsafe because although the main page load is protected against active and passive network attack, none of the other resources are. If a page loads some JavaScript or CSS code via HTTP, an attacker can provide a false, malicious code file and take over the page's DOM once it loads. Then, the user would be back to a situation of having no security. This is why all mainstream browsers warn users about pages that load mixed content. Nor is it safe to reference images via HTTP: What if the attacker swapped the Save Message and Delete Message icons in a webmail app?<ept id="tjiid739-81">&lt;/p&gt;</ept><bpt id="tjiid739-83">&lt;p&gt;</bpt><bpt id="tjiid739-84">&lt;strong&gt;</bpt>You must serve the entire application domain over HTTPS.<ept id="tjiid739-84">&lt;/strong&gt;</ept> Redirect HTTP requests with HTTP 301 or 302 responses to the equivalent HTTPS resource.<ept id="tjiid739-83">&lt;/p&gt;</ept><bpt id="tjiid739-87">&lt;p&gt;</bpt>Some site operators provide only the login page over HTTPS, on the theory that only the user's password is sensitive. These sites' users are <bpt id="tjiid739-88">&lt;a&gt;</bpt>vulnerable to passive and active attacks<ept id="tjiid739-88">&lt;/a&gt;</ept>.<ept id="tjiid739-87">&lt;/p&gt;</ept><bpt id="tjiid739-91">&lt;p&gt;</bpt>Unfortunately, many sites today load content from external sites and CDN's that do not support HTTPS. If it's not possible to serve these resources from your own host or another one that supports HTTPS, you should urge these other sites to start supporting HTTPS immediately.<ept id="tjiid739-91">&lt;/p&gt;</ept><bpt id="tjiid739-93">&lt;h2&gt;</bpt>Security and Cookies<ept id="tjiid739-93">&lt;/h2&gt;</ept><bpt id="tjiid739-95">&lt;p&gt;</bpt>As Chris Palmer described in a <bpt id="tjiid739-96">&lt;a href="https://www.isecpartners.com/media/12009/web-session-management.pdf"&gt;</bpt>paper on secure session management for web applications<ept id="tjiid739-96">&lt;/a&gt;</ept>, site operators must scope sensitive cookies (such as cookies used for user authentication) to the secure origin. If a cookie is broadly scoped (with the Domain attribute in the Set-Cookie: header), it may "leak" to other hosts or applications in the same domain--potentially less-secure hosts or applications.<ept id="tjiid739-95">&lt;/p&gt;</ept><bpt id="tjiid739-99">&lt;p&gt;</bpt>Similarly, the application must set the Secure attribute on the cookie when setting it. This attribute instructs the browser to send the cookie only over secure (HTTPS) transport, never insecure (HTTP).<ept id="tjiid739-99">&lt;/p&gt;</ept><bpt id="tjiid739-101">&lt;h2&gt;</bpt>Use HTTP Strict Transport Security<ept id="tjiid739-101">&lt;/h2&gt;</ept><bpt id="tjiid739-103">&lt;p&gt;</bpt><bpt id="tjiid739-104">&lt;a href="https://en.wikipedia.org/wiki/Strict_Transport_Security"&gt;</bpt>HTTP Strict Transport Security<ept id="tjiid739-104">&lt;/a&gt;</ept> (HSTS) is an HTTP protocol extension that enables site operators to instruct browsers to expect the site to use HTTPS.<ept id="tjiid739-103">&lt;/p&gt;</ept><bpt id="tjiid739-107">&lt;p&gt;</bpt>Although not all browsers yet support HSTS, EFF urges those that don't--we're looking especially at you, Apple and Microsoft--to follow the lead Google, Opera, and Mozilla have set by adopting this useful security mechanism. Indeed, ultimately we expect HTTPS (and possibly newer protocols such as <bpt id="tjiid739-108">&lt;a href="https://en.wikipedia.org/wiki/SPDY"&gt;</bpt>SPDY<ept id="tjiid739-108">&lt;/a&gt;</ept> and <bpt id="tjiid739-110">&lt;a href="https://en.wikipedia.org/wiki/QUIC"&gt;</bpt>QUIC<ept id="tjiid739-110">&lt;/a&gt;</ept>) to replace HTTP entirely, the way SSH replaced Telnet and rsh.<ept id="tjiid739-107">&lt;/p&gt;</ept><bpt id="tjiid739-113">&lt;p&gt;</bpt>As an extra precaution, your site should support HSTS preloading, which prevents interception of an HTTP request if the browser hasn't yet received a valid HSTS header from the server. HSTS preloading is implemented via an opt-in list of domains that is included in Chromium, Google Chrome, and Firefox. See <bpt id="tjiid739-114">&lt;a href="http://www.chromium.org/sts"&gt;</bpt>Chromium's page<ept id="tjiid739-114">&lt;/a&gt;</ept> for instructions on getting your site added to this list. Note that you must also send an HSTS header with a max-age greater value than 18 weeks for Firefox to include your site in their HSTS preload list.<ept id="tjiid739-113">&lt;/p&gt;</ept><bpt id="tjiid739-117">&lt;p&gt;</bpt>We recently enabled HSTS and HSTS preloading for eff.org. It took less than an hour to set up, and we found a way to do it without forcibly redirecting users to HTTPS, so we can state an unequivocal preference for HTTPS access while still making the site available in HTTP. It worked like a charm and a significant fraction of our users are now automatically accessing our site in HTTPS, perhaps without even knowing it.<ept id="tjiid739-117">&lt;/p&gt;</ept><bpt id="tjiid739-119">&lt;h2&gt;</bpt>Choose Strong Protocols and Cipher Suites<ept id="tjiid739-119">&lt;/h2&gt;</ept><bpt id="tjiid739-121">&lt;p&gt;</bpt>Here is a brief list of recommendations for choosing secure protocols and cipher suites in an SSL deployment:<ept id="tjiid739-121">&lt;/p&gt;</ept><bpt id="tjiid739-123">&lt;ul&gt;</bpt><bpt id="tjiid739-124">&lt;li&gt;</bpt>Disable support for SSLv2, SSLv3, and TLS 1.0.<ept id="tjiid739-124">&lt;/li&gt;</ept><bpt id="tjiid739-126">&lt;li&gt;</bpt>Support TLS 1.1 and 1.2.<ept id="tjiid739-126">&lt;/li&gt;</ept><bpt id="tjiid739-128">&lt;li&gt;</bpt>Disable NULL, aNULL, and eNULL ciphersuites, which do not offer both encryption and authentication.<ept id="tjiid739-128">&lt;/li&gt;</ept><bpt id="tjiid739-130">&lt;li&gt;</bpt>Use private keys that are at least as secure as a 2048-bit RSA key.<ept id="tjiid739-130">&lt;/li&gt;</ept><bpt id="tjiid739-132">&lt;li&gt;</bpt>Prefer ciphersuites that include <bpt id="tjiid739-133">&lt;b&gt;</bpt>ephemeral Diffie-Hellman key exchange<ept id="tjiid739-133">&lt;/b&gt;</ept>. These offer the important property of <bpt id="tjiid739-135">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt>Perfect Forward Secrecy<ept id="tjiid739-135">&lt;/a&gt;</ept>, which prevents decryption of past web traffic if your SSL private key is compromised in the future.<ept id="tjiid739-132">&lt;/li&gt;</ept><bpt id="tjiid739-138">&lt;li&gt;</bpt>Disable ciphersuites with keys sizes smaller than 128 bits for encryption.<ept id="tjiid739-138">&lt;/li&gt;</ept><bpt id="tjiid739-140">&lt;li&gt;</bpt>Disable ciphersuites that use MD5 for hashing. SHA-1 is also discouraged but may be required for compatibility with TLS 1.0 and SSLv3.<ept id="tjiid739-140">&lt;/li&gt;</ept><bpt id="tjiid739-142">&lt;li&gt;</bpt>Disable ciphersuites that use RC4 for encryption. AES-CBC is preferable to RC4 but vulnerable to the <bpt id="tjiid739-143">&lt;a href="https://www.imperialviolet.org/2011/09/23/chromeandbeast.html"&gt;</bpt>BEAST<ept id="tjiid739-143">&lt;/a&gt;</ept> attack. Thus, AES-GCM is often recommended.<ept id="tjiid739-142">&lt;/li&gt;</ept><bpt id="tjiid739-146">&lt;li&gt;</bpt>Disable TLS compression in order to prevent the <bpt id="tjiid739-147">&lt;a href="https://en.wikipedia.org/wiki/CRIME_%28security_exploit%29"&gt;</bpt>CRIME attack<ept id="tjiid739-147">&lt;/a&gt;</ept>.<ept id="tjiid739-146">&lt;/li&gt;</ept><bpt id="tjiid739-150">&lt;li&gt;</bpt>Only support secure TLS renegotiations compliant with <bpt id="tjiid739-151">&lt;a href="http://www.ietf.org/rfc/rfc5746.txt"&gt;</bpt>RFC 5746<ept id="tjiid739-151">&lt;/a&gt;</ept>, or disable TLS renegotiations entirely.<ept id="tjiid739-150">&lt;/li&gt;</ept><ept id="tjiid739-123">&lt;/ul&gt;</ept><bpt id="tjiid739-155">&lt;p&gt;</bpt>A useful tool for testing for well-known weaknesses in an existing HTTPS deployment is Qualys's <bpt id="tjiid739-156">&lt;a href="https://www.ssllabs.com/ssltest/"&gt;</bpt>SSL Server Test<ept id="tjiid739-156">&lt;/a&gt;</ept>.<ept id="tjiid739-155">&lt;/p&gt;</ept><bpt id="tjiid739-159">&lt;h2&gt;</bpt>Performance Concerns<ept id="tjiid739-159">&lt;/h2&gt;</ept><bpt id="tjiid739-161">&lt;p&gt;</bpt>Many site operators report that they can't move to HTTPS for performance reasons. However, most people who say this have not actually measured any performance loss, may not have measured performance at all, and have not profiled and optimized their site's behavior. Usually, sites have latency far higher and/or throughput far lower than necessary even when hosting over HTTP--indicating HTTPS is not the problem.<ept id="tjiid739-161">&lt;/p&gt;</ept><bpt id="tjiid739-163">&lt;p&gt;</bpt>The crux of the performance problem is usually at the content layer, and also often at the database layer. Web applications are fundamentally I/O-bound, after all. Consider <bpt id="tjiid739-164">&lt;a href="http://gmailblog.blogspot.com/2008/05/need-for-speed-path-to-faster-loading.html"&gt;</bpt>this wisdom from the Gmail developers<ept id="tjiid739-164">&lt;/a&gt;</ept>:<ept id="tjiid739-163">&lt;/p&gt;</ept><bpt id="tjiid739-167">&lt;blockquote&gt;</bpt><bpt id="tjiid739-168">&lt;p&gt;</bpt>First, we listed every transaction between the web browser and Google's servers, starting with the moment the "Sign in" button is pressed. To do this, we used a lot of different web development tools, like <bpt id="tjiid739-169">&lt;a href="http://httpwatch.com/"&gt;</bpt>Httpwatch<ept id="tjiid739-169">&lt;/a&gt;</ept>, <bpt id="tjiid739-171">&lt;a href="http://www.wireshark.org/"&gt;</bpt>WireShark<ept id="tjiid739-171">&lt;/a&gt;</ept>, and <bpt id="tjiid739-173">&lt;a href="http://www.fiddlertool.com/fiddler/"&gt;</bpt>Fiddler<ept id="tjiid739-173">&lt;/a&gt;</ept>, plus our own performance measuring systems. [...]<ept id="tjiid739-168">&lt;/p&gt;</ept><bpt id="tjiid739-176">&lt;p&gt;</bpt>We spent hours poring over these traces to see exactly what was happening between the browser and Gmail during the sign-in sequence, and we found that there were between fourteen and twenty-four HTTP requests required to load an inbox and display it. To put these numbers in perspective, a popular network news site's home page required about a 180 requests to fully load when I checked it yesterday. But when we examined our requests, we realized that we could do better. We decided to attack the problem from several directions at once: reduce the number of overall requests, make more of the requests cacheable by the browser, and reduce the overhead of each request.<ept id="tjiid739-176">&lt;/p&gt;</ept><bpt id="tjiid739-178">&lt;p&gt;</bpt>We made good progress on every front. We reduced the weight of each request itself by eliminating or narrowing the scope of some of our cookies. We made sure that all our images were cacheable by the browser, and we consolidated small icon images into single meta-images, a technique known as spriting. We combined several requests into a single combined request and response. The result is that it now takes as few as four requests from the click of the "Sign in" button to the display of your inbox.<ept id="tjiid739-178">&lt;/p&gt;</ept><ept id="tjiid739-167">&lt;/blockquote&gt;</ept><bpt id="tjiid739-181">&lt;p&gt;</bpt>Google's <bpt id="tjiid739-182">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>Adam Langley provides additional detail<ept id="tjiid739-182">&lt;/a&gt;</ept>:<ept id="tjiid739-181">&lt;/p&gt;</ept><bpt id="tjiid739-185">&lt;blockquote&gt;</bpt>In order to do this we had to deploy <bpt id="tjiid739-186">&lt;em&gt;</bpt>no additional machines<ept id="tjiid739-186">&lt;/em&gt;</ept> and <bpt id="tjiid739-188">&lt;em&gt;</bpt>no special hardware<ept id="tjiid739-188">&lt;/em&gt;</ept>. On our production frontend machines, SSL/TLS accounts for less than 1% of the CPU load, less than 10KB of memory per connection and less than 2% of network overhead. Many people believe that SSL takes a lot of CPU time and we hope the above numbers (public for the first time) will help to dispel that. [emphasis in original]<ept id="tjiid739-185">&lt;/blockquote&gt;</ept><bpt id="tjiid739-191">&lt;p&gt;</bpt>Is it any wonder Gmail performs well, even when using HTTPS exclusively? Site operators can realize incremental improvement by gradually tuning their web applications. Chris gave a presentation to this effect at <bpt id="tjiid739-192">&lt;a href="http://assets.en.oreilly.com/1/event/22/High%20Performance,%20Low%20Cost,%20and%20Strong%20Security_%20Pick%20Any%20Three%20Presentation.pdf"&gt;</bpt>Web 2.0 Expo 2009<ept id="tjiid739-192">&lt;/a&gt;</ept>.<ept id="tjiid739-191">&lt;/p&gt;</ept><bpt id="tjiid739-195">&lt;h2&gt;</bpt>Conclusion<ept id="tjiid739-195">&lt;/h2&gt;</ept><bpt id="tjiid739-197">&lt;p&gt;</bpt>HTTPS provides the baseline of safety for web application users, and there is no performance- or cost-based reason to stick with HTTP. Web application providers <bpt id="tjiid739-198">&lt;a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1421553"&gt;</bpt>undermine their business models<ept id="tjiid739-198">&lt;/a&gt;</ept> when, by continuing to use HTTP, they enable a wide range of attackers anywhere on the internet to compromise users' information.<ept id="tjiid739-197">&lt;/p&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid739-1">&lt;p class="eff-light-blue eff-grey"&gt;</bpt>Écrit par <bpt id="tjiid739-2">&lt;a href="http://noncombatant.org"&gt;</bpt>Chris Palmer<ept id="tjiid739-2">&lt;/a&gt;</ept> et <bpt id="tjiid739-4">&lt;a href="/about/staff/yan-zhu"&gt;</bpt>Yan Zhu<ept id="tjiid739-4">&lt;/a&gt;</ept><ept id="tjiid739-1">&lt;/p&gt;</ept><bpt id="tjiid739-7">&lt;p&gt;</bpt><bpt id="tjiid739-8">&lt;em&gt;</bpt>Publié le 15 novembre 2010. Révisé le 12 décembre 2013.<ept id="tjiid739-8">&lt;/em&gt;</ept><ept id="tjiid739-7">&lt;/p&gt;</ept><bpt id="tjiid739-11">&lt;p&gt;</bpt>Les spécialistes de l’internet ont toujours su que HTTP est non sécurisé et qu’il cause beaucoup de risques pour les utilisateurs. Parce que le trafic HTTP n'est pas chiffré, toutes les données envoyées via HTTP peuvent être lues et modifiées par quiconque a accès au réseau. Comme l’ont révélé les documents de Snowden sur la surveillance de la NSA, le trafic HTTP peut être également collecté et fouillé par des organismes gouvernementaux sans préavis aux utilisateurs ou aux webmasters. Compte tenu de ces risques, l’EFF estime que les sites Web devraient offrir le protocole HTTPS sur l’ensemble de leurs pages dès que possible.<ept id="tjiid739-11">&lt;/p&gt;</ept><bpt id="tjiid739-13">&lt;p&gt;</bpt>Tandis que HTTPS existe depuis longtemps comme le strict minimum pour la sécurité sur le Web, certains sites ont été lents à l’adopter. Cela s’explique en partie par le fait qu’une certaine attention est nécessaire pour pouvoir offrir correctement et entièrement une application via HTTPS.<ept id="tjiid739-13">&lt;/p&gt;</ept><bpt id="tjiid739-15">&lt;p&gt;</bpt>Cet article est conçu pour encourager et pour aider les opérateurs de sites Web dans la mise en œuvre et l'amélioration de la prise en charge de HTTPS. Bien qu'aucune précaution ne puisse prémunir contre toutes les menaces, la prise en charge de HTTPS protégera les utilisateurs contre un large éventail d'attaques courantes.<ept id="tjiid739-15">&lt;/p&gt;</ept><bpt id="tjiid739-17">&lt;h2&gt;</bpt>Contexte<ept id="tjiid739-17">&lt;/h2&gt;</ept><bpt id="tjiid739-19">&lt;p&gt;</bpt>HTTPS apporte trois garanties de sécurité :<ept id="tjiid739-19">&lt;/p&gt;</ept><bpt id="tjiid739-21">&lt;ol&gt;</bpt><bpt id="tjiid739-22">&lt;li&gt;</bpt><bpt id="tjiid739-23">&lt;strong&gt;</bpt>L’authentification du serveur<ept id="tjiid739-23">&lt;/strong&gt;</ept> permet aux utilisateurs d'avoir confiance qu'ils communiquent avec le serveur d'application réel. Sans cette garantie, il ne peut y avoir de garantie de confidentialité ou d'intégrité.<ept id="tjiid739-22">&lt;/li&gt;</ept><bpt id="tjiid739-26">&lt;li&gt;</bpt><bpt id="tjiid739-27">&lt;strong&gt;</bpt>La confidentialité des données<ept id="tjiid739-27">&lt;/strong&gt;</ept> signifie que les espions ne peuvent comprendre le contenu des communications entre le navigateur et le serveur web, car les données sont chiffrées.<ept id="tjiid739-26">&lt;/li&gt;</ept><bpt id="tjiid739-30">&lt;li&gt;</bpt><bpt id="tjiid739-31">&lt;strong&gt;</bpt>L’intégrité des données<ept id="tjiid739-31">&lt;/strong&gt;</ept> signifie qu'un attaquant du réseau ne peut pas endommager ou modifier le contenu des communications entre le navigateur et le serveur web, car elles sont validées par un <bpt id="tjiid739-33">&lt;em&gt;</bpt><bpt id="tjiid739-34">&lt;a href="https://secure.wikimedia.org/wikipedia/en/wiki/Message_authentication_code"&gt;</bpt>code d'authentification en message cryptographique<ept id="tjiid739-34">&lt;/a&gt;</ept><ept id="tjiid739-33">&lt;/em&gt;</ept>.<ept id="tjiid739-30">&lt;/li&gt;</ept><ept id="tjiid739-21">&lt;/ol&gt;</ept><bpt id="tjiid739-39">&lt;p&gt;</bpt><bpt id="tjiid739-40">&lt;strong&gt;</bpt>Le HTTP ne fournit aucune garantie<ept id="tjiid739-40">&lt;/strong&gt;</ept> de sécurité et les applications qui l'utilisent <bpt id="tjiid739-42">&lt;strong&gt;</bpt>ne peuvent pas vraiment fournir de sécurité à leurs utilisateurs<ept id="tjiid739-42">&lt;/strong&gt;</ept>. Lorsque vous utilisez une application Web hébergée via HTTP, les gens n'ont aucun moyen de savoir s’ils parlent au serveur d'application réel, et ne peuvent s’assurer que les attaquants n'ont pas lu ou modifié des communications entre l'ordinateur et le serveur.<ept id="tjiid739-39">&lt;/p&gt;</ept><bpt id="tjiid739-45">&lt;h2&gt;</bpt>Modes d'attaque et de Defense<ept id="tjiid739-45">&lt;/h2&gt;</ept><bpt id="tjiid739-47">&lt;p&gt;</bpt>De quelque manière que les utilisateurs se connectent à l'Internet, il existe une variété de personnes qui peuvent les attaquer, que ce soit en les espionnant, en les imitant, en falsifiant leurs communications, ou en faisant tout cela en même temps. L'opérateur du réseau Wi-Fi peut le faire ; n'importe quel FAI se trouvant entre le client et le serveur peut le faire ; quiconque peut reconfigurer le routeur Wi-Fi ou autre routeur peut le faire ; et souvent, n'importe qui d'autre utilisant le même réseau peut le faire aussi.<ept id="tjiid739-47">&lt;/p&gt;</ept><bpt id="tjiid739-49">&lt;p&gt;</bpt><bpt id="tjiid739-50">&lt;a href="http://codebutler.com/firesheep-a-day-later/"&gt;</bpt>Firesheep<ept id="tjiid739-50">&lt;/a&gt;</ept> est un exemple <bpt id="tjiid739-52">&lt;em&gt;</bpt>d'attaque de réseau passive<ept id="tjiid739-52">&lt;/em&gt;</ept> : il intercepte le contenu des communications réseau entre le navigateur et le serveur, mais ne les redirige pas et ne les modifie pas. Les programmes gouvernementaux de surveillance tels que <bpt id="tjiid739-54">&lt;a href="http://www.theguardian.com/world/2013/jul/31/nsa-top-secret-program-online-data"&gt;</bpt>XKeyscore<ept id="tjiid739-54">&lt;/a&gt;</ept> utilisent également des attaques passives sur le trafic HTTP pour recueillir des quantités massives de données relatives aux communications en ligne.<ept id="tjiid739-49">&lt;/p&gt;</ept><bpt id="tjiid739-57">&lt;p&gt;</bpt>En revanche, d’autres outils disponibles gratuitement effectuent des <bpt id="tjiid739-58">&lt;em&gt;</bpt>attaques de réseau actives<ept id="tjiid739-58">&lt;/em&gt;</ept>, où l'attaquant modifie le contenu ou redirige les communications. Ces outils varient du grave, tel que <bpt id="tjiid739-60">&lt;a href="http://www.thoughtcrime.org/software/sslstrip/"&gt;</bpt>sslstrip<ept id="tjiid739-60">&lt;/a&gt;</ept>, au ridicule, tel que le <bpt id="tjiid739-62">&lt;a href="http://www.ex-parrot.com/pete/upside-down-ternet.html"&gt;</bpt>Upside-Down-Ternet<ept id="tjiid739-62">&lt;/a&gt;</ept>. Bien que Upside-Down-Ternet soit une farce drôle, il est techniquement identique à des attaques potentiellement plus destructrices telles qu’une attaque injectant du code malveillant ou des renseignements inexacts dans des pages web ; en même temps, il montre que ces attaques sont assez faciles pour être des blagues. Les points d’accès Wi-Fi ont été connus pour injecter des publicités dynamiquement dans pages Web que visitent leurs utilisateurs, montrant que les attaques actives de réseau consitituent un modèle d'affaires viable. Des outils comme <bpt id="tjiid739-64">&lt;a href="http://www.oxid.it/cain.html"&gt;</bpt>Caïn and Abel<ept id="tjiid739-64">&lt;/a&gt;</ept> permettent une série d'attaques, y compris la redirection du trafic de réseau local à travers le système de l'attaquant. (Voir aussi <bpt id="tjiid739-66">&lt;a href="http://arpspoof.sourceforge.net/"&gt;</bpt>Arpspoof<ept id="tjiid739-66">&lt;/a&gt;</ept> et <bpt id="tjiid739-68">&lt;a href="http://www.monkey.org/%7Edugsong/dsniff/"&gt;</bpt>dsniff<ept id="tjiid739-68">&lt;/a&gt;</ept>).<ept id="tjiid739-57">&lt;/p&gt;</ept><bpt id="tjiid739-71">&lt;p&gt;</bpt>Seul un mécanisme offrant (au minimum) l'authentification, la confidentialité et l'intégrité des données peuvent défendre contre une série d'attaques. Actuellement, le protocole HTTPS est notre meilleure option concernant les applications Web.<ept id="tjiid739-71">&lt;/p&gt;</ept><bpt id="tjiid739-73">&lt;p&gt;</bpt>Cependant, il y a quelques pièges potentiels que les opérateurs de site doivent éviter afin de déployer HTTPS en toute sécurité.<ept id="tjiid739-73">&lt;/p&gt;</ept><bpt id="tjiid739-75">&lt;h2&gt;</bpt>Contenu mixte<ept id="tjiid739-75">&lt;/h2&gt;</ept><bpt id="tjiid739-77">&lt;p&gt;</bpt>En hébergeant une application via HTTPS, il ne doit y avoir aucun <bpt id="tjiid739-78">&lt;em&gt;</bpt>contenu mixte<ept id="tjiid739-78">&lt;/em&gt;</ept> ; autrement dit, tout le contenu de la page doit être obtenu via HTTPS. Il est fréquent de voir une prise en charge partielle de HTTPS sur les sites, où les pages principales sont récupérés via HTTPS, mais certains ou tous les éléments multimédias, feuilles de style et JavaScript de la page sont récupérés via HTTP.<ept id="tjiid739-77">&lt;/p&gt;</ept><bpt id="tjiid739-81">&lt;p&gt;</bpt>Cela est dangereux parce que même si le chargement de la page principale est protégé contre les attaques de réseau actives et passives, aucune des autres ressources ne l’est. Si une page charge du code JavaScript ou CSS via HTTP, un attaquant peut fournir un fichier de code falsifié et malveillant et prendre en charge le DOM (Document Object Model) de la page une fois chargé. Ainsi, l'utilisateur serait de retour à une situation non sécurisée. C’est pourquoi tous les principaux navigateurs avertissent les utilisateurs concernant les pages qui chargent du contenu mixte. Pareillement, il n'est pas sécurisé de référencer des images via HTTP : Que se passe-t-il par exemple si l'attaquant inverse les icônes pour Enregistrer et pour Sauvegarder un message dans une application de messagerie Web ? <ept id="tjiid739-81">&lt;/p&gt;</ept><bpt id="tjiid739-83">&lt;p&gt;</bpt><bpt id="tjiid739-84">&lt;strong&gt;</bpt>Vous devez fournir l’ensemble du domaine de l'application via HTTPS.<ept id="tjiid739-84">&lt;/strong&gt;</ept> Redirigez les requêtes HTTP avec des réponses HTTP 301 ou 302 à la ressource HTTPS équivalente. <ept id="tjiid739-83">&lt;/p&gt;</ept><bpt id="tjiid739-87">&lt;p&gt;</bpt>Certains opérateurs de site fournissent uniquement la page de connexion via HTTPS, s’appuyant sur la théorie que seul le mot de passe de l’utilisateur est sensible. Les utilisateurs de ces sites <bpt id="tjiid739-88">&lt;a&gt;</bpt>sont vulnérables aux attaques passives et actives.<ept id="tjiid739-88">&lt;/a&gt;</ept><ept id="tjiid739-87">&lt;/p&gt;</ept><bpt id="tjiid739-91">&lt;p&gt;</bpt>Malheureusement, beaucoup de sites chargent  aujourd’hui du contenu à partir de sites externes et utilisent du CDN (Content Delivery Network) qui ne prend pas en charge le protocole HTTPS. S'il n'est pas possible de servir ces ressources à partir de votre propre hôte ou d’un autre prenant en charge le protocole HTTPS, vous devriez inviter ces sites à commencer à offrir HTTPS dans l’immédiat.<ept id="tjiid739-91">&lt;/p&gt;</ept><bpt id="tjiid739-93">&lt;h2&gt;</bpt>Sécurité et Cookies<ept id="tjiid739-93">&lt;/h2&gt;</ept><bpt id="tjiid739-95">&lt;p&gt;</bpt>Comme Chris Palmer le décrit dans une <bpt id="tjiid739-96">&lt;a href="https://www.isecpartners.com/media/12009/web-session-management.pdf"&gt;</bpt>publication sur la gestion de session sécurisée pour les applications web<ept id="tjiid739-96">&lt;/a&gt;</ept>, les opérateurs de site doivent limiter les cookies sensibles (tels que les cookies utilisés pour l'authentification de l'utilisateur) à une origine sécurisée. Si un cookie a une large portée (avec l'attribut Domain dans le Set-Cookie défini en tant que : header), il peut « diivulguer » des informations à d'autres hôtes ou applications (potentiellement moins sécurisés) du même domaine.<ept id="tjiid739-95">&lt;/p&gt;</ept><bpt id="tjiid739-99">&lt;p&gt;</bpt>L'application doit également définir l'attribut Secure sur le cookie lors de l'installation. Cet attribut indique au navigateur d’envoyer le cookie uniquement via un transport sécurisé (HTTPS) et jamais via un transport non sécurisé (HTTP).<ept id="tjiid739-99">&lt;/p&gt;</ept><bpt id="tjiid739-101">&lt;h2&gt;</bpt>Utiliser le HTTP Strict Transport Security<ept id="tjiid739-101">&lt;/h2&gt;</ept><bpt id="tjiid739-103">&lt;p&gt;</bpt><bpt id="tjiid739-104">&lt;a href="https://en.wikipedia.org/wiki/Strict_Transport_Security"&gt;</bpt>Le HTSTS (HTTP Strict Transport Security)<ept id="tjiid739-104">&lt;/a&gt;</ept> est une extension du protocole HTTP qui permet aux opérateurs de site d'ordonner aux navigateurs de demander à ce que le site utilise le protocole HTTPS.<ept id="tjiid739-103">&lt;/p&gt;</ept><bpt id="tjiid739-107">&lt;p&gt;</bpt>Bien que tous les navigateurs ne prennent pas encore en charge HSTS, l’EFF invite tous ceux qui ne font pas (nous pensons surtout à vous, Apple et Microsoft) à suivre l'exemple donné par Google, Opera et Mozilla en adoptant ce mécanisme de sécurité utile. En effet, au bout du compte, nous prévoyons que HTTPS (et éventuellement de nouveaux protocoles tels que <bpt id="tjiid739-108">&lt;a href="https://en.wikipedia.org/wiki/SPDY"&gt;</bpt>SPDY<ept id="tjiid739-108">&lt;/a&gt;</ept> et <bpt id="tjiid739-110">&lt;a href="https://en.wikipedia.org/wiki/QUIC"&gt;</bpt>QUIC<ept id="tjiid739-110">&lt;/a&gt;</ept>) remplacera entièrement HTTP, tout comme SSH a remplacé Telnet et rsh.<ept id="tjiid739-107">&lt;/p&gt;</ept><bpt id="tjiid739-113">&lt;p&gt;</bpt>Comme précaution supplémentaire, votre site doit prendre en charge la précharge du HSTS, qui empêche l'interception d'une requête HTTP si le navigateur n'a pas encore reçu d’en-tête HSTS valide depuis le serveur. La précharge du HSTS est implémentée via une liste de domaines avec option d’adhésion incluse dans Chrome, Google Chrome et Firefox. Voir la <bpt id="tjiid739-114">&lt;a href="http://www.chromium.org/sts"&gt;</bpt>page de Chromium<ept id="tjiid739-114">&lt;/a&gt;</ept> pour obtenir des instructions sur comment ajouter votre site à cette liste. Notez que vous devez également envoyer un en-tête de HSTS avec un max-age (âge maximum) d’une valeur supérieure à 18 semaines pour que Firefox inclue votre site dans sa liste de précharge HSTS. <ept id="tjiid739-113">&lt;/p&gt;</ept><bpt id="tjiid739-117">&lt;p&gt;</bpt>Nous avons récemment activé HSTS et la précharge HSTS pour eff.org. Il nous a fallu moins d'une heure pour mettre cela en place, et nous avons trouvé le moyen de le faire sans rediriger de manière forcée les utilisateurs vers HTTPS, nous pouvons donc affirmer une préférence claire pour l'accès HTTPS en gardant le site toujours disponible via HTTP. Cela a fonctionné comme un charme et un pourcentage important de nos utilisateurs accède désormais automatiquement à notre site en HTTPS, peut-être sans même le savoir.<ept id="tjiid739-117">&lt;/p&gt;</ept><bpt id="tjiid739-119">&lt;h2&gt;</bpt>Choisir des protocoles rigoureux et des suites de chiffrement<ept id="tjiid739-119">&lt;/h2&gt;</ept><bpt id="tjiid739-121">&lt;p&gt;</bpt>Voici une brève liste de recommandations pour choisir les protocoles sécurisés et les suites de chiffrement d’un déploiement SSL :<ept id="tjiid739-121">&lt;/p&gt;</ept><bpt id="tjiid739-123">&lt;ul&gt;</bpt><bpt id="tjiid739-124">&lt;li&gt;</bpt>Désactivez la prise en charge de SSLv2, SSLv3, and TLS 1.0.<ept id="tjiid739-124">&lt;/li&gt;</ept><bpt id="tjiid739-126">&lt;li&gt;</bpt>Activez la prise en charge TLS 1.1 et 1.2.<ept id="tjiid739-126">&lt;/li&gt;</ept><bpt id="tjiid739-128">&lt;li&gt;</bpt>Désactivez les suites de chiffrement NULL, aNULL et eNULL, qui n'offrent pas en même temps le chiffrement et l’authentification.<ept id="tjiid739-128">&lt;/li&gt;</ept><bpt id="tjiid739-130">&lt;li&gt;</bpt>Utilisez des clés privées qui sont au moins aussi sûres qu'une clé RSA de 2048 bits. <ept id="tjiid739-130">&lt;/li&gt;</ept><bpt id="tjiid739-132">&lt;li&gt;</bpt>Préférez des suites de chiffrement qui incluent <bpt id="tjiid739-133">&lt;b&gt;</bpt>l'échange de clés Diffie-Hellman éphémères<ept id="tjiid739-133">&lt;/b&gt;</ept>. Celles-ci offrent le caractéristique important de <bpt id="tjiid739-135">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt>Perfect Forward Secrecy<ept id="tjiid739-135">&lt;/a&gt;</ept> (Confidentialité persistante parfaite), qui empêche le décryptage de votre trafic Web récent si votre clé privée SSL est compromise à l’avenir. <ept id="tjiid739-132">&lt;/li&gt;</ept><bpt id="tjiid739-138">&lt;li&gt;</bpt>Désactivez les suites de chiffrement avec des tailles de clés inférieures à 128 bits pour le chiffrement. <ept id="tjiid739-138">&lt;/li&gt;</ept><bpt id="tjiid739-140">&lt;li&gt;</bpt>Désactivez les suites de chiffrement utilisant MD5 pour le hachage. SHA-1 est également déconseillé mais peut être requis pour la compatibilité avec TLS 1.0 et SSLv3.<ept id="tjiid739-140">&lt;/li&gt;</ept><bpt id="tjiid739-142">&lt;li&gt;</bpt>Désactivez les suites de chiffrement qui utilisent RC4 pour le chiffrement. AES-CBC est préférable au RC4 mais vulnérable à une attaque <bpt id="tjiid739-143">&lt;a href="https://www.imperialviolet.org/2011/09/23/chromeandbeast.html"&gt;</bpt>BEAST<ept id="tjiid739-143">&lt;/a&gt;</ept>. Ainsi, AES-GCM est souvent recommandé. <ept id="tjiid739-142">&lt;/li&gt;</ept><bpt id="tjiid739-146">&lt;li&gt;</bpt>Désactivez la compression de TLS afin d'éviter l'attaque <bpt id="tjiid739-147">&lt;a href="https://en.wikipedia.org/wiki/CRIME_%28security_exploit%29"&gt;</bpt>CRIME<ept id="tjiid739-147">&lt;/a&gt;</ept>. <ept id="tjiid739-146">&lt;/li&gt;</ept><bpt id="tjiid739-150">&lt;li&gt;</bpt>Offrez uniquement la prise en charge de renégociations de TLS sécurisées conformes à <bpt id="tjiid739-151">&lt;a href="http://www.ietf.org/rfc/rfc5746.txt"&gt;</bpt>RFC 5746<ept id="tjiid739-151">&lt;/a&gt;</ept>, ou désactivez complètement la renégociation TLS.<ept id="tjiid739-150">&lt;/li&gt;</ept><ept id="tjiid739-123">&lt;/ul&gt;</ept><bpt id="tjiid739-155">&lt;p&gt;</bpt>Un outil utile pour tester les faiblesses connues dans un déploiement existant de HTTPS est le <bpt id="tjiid739-156">&lt;a href="https://www.ssllabs.com/ssltest/"&gt;</bpt>SSL Server Test de  Qualys.<ept id="tjiid739-156">&lt;/a&gt;</ept><ept id="tjiid739-155">&lt;/p&gt;</ept><bpt id="tjiid739-159">&lt;h2&gt;</bpt>Préoccupations en matière de rendement<ept id="tjiid739-159">&lt;/h2&gt;</ept><bpt id="tjiid739-161">&lt;p&gt;</bpt>Plusieurs opérateurs de site indiquent qu'ils ne peuvent pas migrer leurs sites vers HTTPS pour des raisons de rendement. Cependant, la plupart des gens qui disent cela n'ont pas réellement mesuré la perte de rendement, n’ont peut-être pas du tout mesuré le rendement, et n'ont pas profilé ni optimisé le comportement de leur site. Habituellement, les sites ont une latence beaucoup plus élevée ou un débit beaucoup plus bas que nécessaire même en hébergeant le site via HTTP, ce qui indique que le HTTPS n'est pas le problème.<ept id="tjiid739-161">&lt;/p&gt;</ept><bpt id="tjiid739-163">&lt;p&gt;</bpt>La clé du problème de rendement se trouve souvent à la couche de contenu ou encore à la couche de base de données. Après tout, les applications Web sont fondamentalement gourmandes en E/S. Prenez en considération <bpt id="tjiid739-164">&lt;a href="http://gmailblog.blogspot.com/2008/05/need-for-speed-path-to-faster-loading.html"&gt;</bpt>cette sagesse des développeurs de Gmail <ept id="tjiid739-164">&lt;/a&gt;</ept>:<ept id="tjiid739-163">&lt;/p&gt;</ept><bpt id="tjiid739-167">&lt;blockquote&gt;</bpt><bpt id="tjiid739-168">&lt;p&gt;</bpt>Nous avons d’abord répertorié toutes les transactions entre le navigateur et les serveurs de Google, à partir de l'instant ou le bouton « Se connecter » est appuyé. Pour ce faire, nous avons utilisé un grand nombre d'outils de développement Web, comme <bpt id="tjiid739-169">&lt;a href="http://httpwatch.com/"&gt;</bpt>Httpwatch<ept id="tjiid739-169">&lt;/a&gt;</ept>, <bpt id="tjiid739-171">&lt;a href="http://www.wireshark.org/"&gt;</bpt>WireShark<ept id="tjiid739-171">&lt;/a&gt;</ept> et <bpt id="tjiid739-173">&lt;a href="http://www.fiddlertool.com/fiddler/"&gt;</bpt>Fiddler<ept id="tjiid739-173">&lt;/a&gt;</ept>, ainsi que nos propres systèmes de mesure de rendement. [...] <ept id="tjiid739-168">&lt;/p&gt;</ept><bpt id="tjiid739-176">&lt;p&gt;</bpt>Nous avons passé des heures penchés sur ces traces pour voir exactement ce qui se passait entre le navigateur et Gmail pendant la séquence de connexion, et nous avons trouvé qu'il y avait entre quatorze et vingt-quatre requêtes HTTP pour pouvoir charger et afficher une boîte de réception. Pour mettre ces chiffres en perspective, la page d’accueil d’un site populaire d’actualités en ligne nécessite autour de 180 demandes pour charger entièrement, comme je l'ai vérifié hier. Mais quand nous avons examiné ces demandes, nous avons réalisé que nous pouvions faire mieux. Nous avons décidé d'attaquer le problème à partir de plusieurs angles à la fois : réduire le nombre de requêtes globales, rendre plus de demandes mises en cache par le navigateur et réduire les frais généraux de chaque demande.<ept id="tjiid739-176">&lt;/p&gt;</ept><bpt id="tjiid739-178">&lt;p&gt;</bpt>Nous avons fait de bons progrès sur tous les fronts. Nous avons réduit le poids de chaque requête proprement dite en éliminant ou en réduisant la portée de certains de nos cookies. Nous avons fait en sorte que toutes nos images soient mises en cache par le navigateur, et nous avons consolidé les images de petites icônes dans de simples meta-images, une technique connue comme spriting. Nous avons combiné plusieurs demandes en une seule demande et réponse combinée. Le résultat est qu'il faut maintenant aussi peu que quatre demandes après avoir cliqué sur le bouton « Se connecter » pour afficher votre boîte de réception.<ept id="tjiid739-178">&lt;/p&gt;</ept><ept id="tjiid739-167">&lt;/blockquote&gt;</ept><bpt id="tjiid739-181">&lt;p&gt;</bpt><bpt id="tjiid739-182">&lt;a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html"&gt;</bpt>Adam Langley de Google fournit des détails supplémentaires<ept id="tjiid739-182">&lt;/a&gt;</ept> : <ept id="tjiid739-181">&lt;/p&gt;</ept><bpt id="tjiid739-185">&lt;blockquote&gt;</bpt>Pour cela nous n’avons pas eu besoin de déployer <bpt id="tjiid739-186">&lt;em&gt;</bpt>de machine supplémentaire<ept id="tjiid739-186">&lt;/em&gt;</ept> ou <bpt id="tjiid739-188">&lt;em&gt;</bpt>de matériel spécial<ept id="tjiid739-188">&lt;/em&gt;</ept>. Sur nos ordinateurs frontaux de production, SSL/TLS consomme mois de 1 % de CPU, moins de 10 Ko de mémoire par connexion et moins de 2 % de la charge réseau. Beaucoup de gens croient que SSL consomme beaucoup de temps processeur et nous espérons que les chiffres ci-dessus (rendus publics pour la première fois) aideront à dissiper ce fait. [italiques dans l'original] <ept id="tjiid739-185">&lt;/blockquote&gt;</ept><bpt id="tjiid739-191">&lt;p&gt;</bpt>Faut-il s'étonner que Gmail fonctionne bien, même s’il utilise exclusivement HTTPS ? Les opérateurs de site peuvent apporter des améliorations graduelles en ajustant progressivement leurs applications Web. Chris a fait un exposé à cet effet à <bpt id="tjiid739-192">&lt;a href="http://assets.en.oreilly.com/1/event/22/High%20Performance,%20Low%20Cost,%20and%20Strong%20Security_%20Pick%20Any%20Three%20Presentation.pdf"&gt;</bpt>Web 2.0 Expo 2009<ept id="tjiid739-192">&lt;/a&gt;</ept>.<ept id="tjiid739-191">&lt;/p&gt;</ept><bpt id="tjiid739-195">&lt;h2&gt;</bpt>Conclusion<ept id="tjiid739-195">&lt;/h2&gt;</ept><bpt id="tjiid739-197">&lt;p&gt;</bpt>Le protocole HTTPS fournit la base de la sécurité pour les utilisateurs d'applications Web, et il n'y a aucune raison relative au rendement ou aux coûts pour rester sur du HTTP. Les fournisseurs d'applications Web <bpt id="tjiid739-198">&lt;a href="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1421553"&gt;</bpt>sapent leurs modèles d'entreprise<ept id="tjiid739-198">&lt;/a&gt;</ept> lorsque, en continuant à utiliser le protocole HTTP, ils permettent à un large éventail d'attaquants n'importe où sur l'internet de compromettre les informations de leurs utilisateurs.<ept id="tjiid739-197">&lt;/p&gt;</ept></target><note>Body</note></trans-unit><trans-unit id="739][title_field][0][value" resname="739][title_field][0][value"><source xml:lang="en">How to Deploy HTTPS Correctly</source><target xml:lang="fr">Comment déployer HTTPS correctement</target><note>Title</note></trans-unit></group><group id="740"><note>Secure Messaging Scorecard</note><trans-unit id="740][body][0][value" resname="740][body][0][value"><source xml:lang="en"><bpt id="tjiid740-1">&lt;a name="about"&gt;</bpt><ept id="tjiid740-1">&lt;/a&gt;</ept>
<bpt id="tjiid740-3">&lt;div class="section"&gt;</bpt>

<bpt id="tjiid740-4">&lt;h2&gt;</bpt>About<ept id="tjiid740-4">&lt;/h2&gt;</ept>

For years, privacy and security experts worldwide have called on the general public to adopt strong, open-source cryptography to protect our communications. The Snowden revelations have confirmed our worst fears: governments are spying on our digital lives, grabbing up communications transmitted in the clear.

Given widespread government surveillance, why don’t people routinely use tools to encrypt their communications? Wouldn’t we all communicate a little more freely without the shadow of surveillance?

It boils down to two things: security and usability. Most of the tools that are easy for the general public to use don’t rely on security best practices--including end-to-end encryption and open source code. Messaging tools that are really secure often aren’t easy to use; everyday users may have trouble installing the technology, verifying its authenticity, setting up an account, or may accidentally use it in ways that expose their communications.

EFF, in collaboration with Julia Angwin at ProPublica and Joseph Bonneau at the Princeton Center for Information Technology Policy, are joining forces to launch a campaign for secure and usable crypto. We are championing technologies that are strongly secure and also simple to use.

The Secure Messaging Scorecard examines dozens of messaging technologies and rates each of them on a range of security best practices. Our campaign is focused on communication technologies -- including chat clients, text messaging apps, email applications, and video calling technologies. These are the tools everyday users need to communicate with friends, family members, and colleagues, and we need secure solutions for them.

We chose technologies that have a large user base--and thus a great deal of sensitive user communications--in addition to smaller companies that are pioneering advanced security practices. We’re hoping our scorecard will serve as a race-to-the-top, spurring innovation around strong crypto for digital communications.

<ept id="tjiid740-3">&lt;/div&gt;</ept>
<bpt id="tjiid740-7">&lt;a name="methodology"&gt;</bpt><ept id="tjiid740-7">&lt;/a&gt;</ept>
<bpt id="tjiid740-9">&lt;div class="section"&gt;</bpt>

<bpt id="tjiid740-10">&lt;h2&gt;</bpt>Methodology<ept id="tjiid740-10">&lt;/h2&gt;</ept>

<bpt id="tjiid740-12">&lt;p dir="ltr"&gt;</bpt>Here are the criteria we looked at in assessing the security of various communication tools.<ept id="tjiid740-12">&lt;/p&gt;</ept>


<bpt id="tjiid740-14">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-15">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-15">&lt;/a&gt;</ept><bpt id="tjiid740-17">&lt;strong&gt;</bpt>1. Is your communication encrypted in transit?<ept id="tjiid740-17">&lt;/strong&gt;</ept>
This criterion requires that all user communications are encrypted along all the links in the communication path. Note that we are not requiring encryption of data that is transmitted on a company network, though that is ideal. We do not require that metadata (such as user names or addresses) is encrypted.<ept id="tjiid740-14">&lt;/p&gt;</ept>

<bpt id="tjiid740-20">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-20">&lt;/a&gt;</ept>

<bpt id="tjiid740-22">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-23">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-23">&lt;/a&gt;</ept><bpt id="tjiid740-25">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-25">&lt;/a&gt;</ept><bpt id="tjiid740-27">&lt;strong&gt;</bpt>2.<ept id="tjiid740-27">&lt;/strong&gt;</ept> <bpt id="tjiid740-29">&lt;strong&gt;</bpt>Is your communication encrypted with a key the provider doesn't have access to?<ept id="tjiid740-29">&lt;/strong&gt;</ept>
This criterion requires that all user communications are end-to-end encrypted. This means the keys necessary to decrypt messages must be generated and stored at the endpoints (i.e. by users, not by servers). The keys should never leave endpoints except with explicit user action, such as to backup a key or synchronize keys between two devices. It is fine if users' public keys are exchanged using a centralized server.<ept id="tjiid740-22">&lt;/p&gt;</ept>

<bpt id="tjiid740-32">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-32">&lt;/a&gt;</ept>

<bpt id="tjiid740-34">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-35">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-35">&lt;/a&gt;</ept><bpt id="tjiid740-37">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-37">&lt;/a&gt;</ept><bpt id="tjiid740-39">&lt;strong&gt;</bpt>3.<ept id="tjiid740-39">&lt;/strong&gt;</ept> <bpt id="tjiid740-41">&lt;strong&gt;</bpt>Can you independently verify your correspondent's identity?<ept id="tjiid740-41">&lt;/strong&gt;</ept><x id="tjiid740-43" ctype="lb"/>This criterion requires that a built-in method exists for users to verify the identity of correspondents they are speaking with and the integrity of the channel, even if the service provider or other third parties are compromised. Two acceptable solutions are:<ept id="tjiid740-34">&lt;/p&gt;</ept>



<bpt id="tjiid740-45">&lt;ul&gt;</bpt><bpt id="tjiid740-46">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-47">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-48">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-48">&lt;/a&gt;</ept>An interface for users to view the fingerprint (hash) of their correspondent's public keys as well as their own, which users can verify manually or out-of-band.<ept id="tjiid740-47">&lt;/p&gt;</ept>

<ept id="tjiid740-46">&lt;/li&gt;</ept>
	<bpt id="tjiid740-52">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-53">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-54">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-54">&lt;/a&gt;</ept>A key exchange protocol with a short-authentication-string comparison, such as the <bpt id="tjiid740-56">&lt;a href="http://en.wikipedia.org/wiki/Socialist_millionaire" style="line-height: 1.538em;"&gt;</bpt>Socialist Millionaire's protocol<ept id="tjiid740-56">&lt;/a&gt;</ept>.<ept id="tjiid740-53">&lt;/p&gt;</ept>

<ept id="tjiid740-52">&lt;/li&gt;</ept>
<ept id="tjiid740-45">&lt;/ul&gt;</ept><bpt id="tjiid740-61">&lt;p dir="ltr"&gt;</bpt>Other solutions are possible, but any solution must verify a binding between users and the cryptographic channel which has been set up. For the scorecard, we are simply requiring that a mechanism is implemented and not evaluating the usability and security of that mechanism.<ept id="tjiid740-61">&lt;/p&gt;</ept>


<bpt id="tjiid740-63">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-64">&lt;a name="pfs"&gt;</bpt><ept id="tjiid740-64">&lt;/a&gt;</ept><bpt id="tjiid740-66">&lt;strong&gt;</bpt>4.<ept id="tjiid740-66">&lt;/strong&gt;</ept> <bpt id="tjiid740-68">&lt;strong&gt;</bpt>Are past communications secure if your keys are stolen?<ept id="tjiid740-68">&lt;/strong&gt;</ept>

This criterion requires that the app provide <bpt id="tjiid740-70">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt>forward secrecy<ept id="tjiid740-70">&lt;/a&gt;</ept>, that is, all communications must be encrypted with ephemeral keys which are routinely deleted (along with the random values used to derive them). It is imperative that these keys cannot be reconstructed after the fact by anybody even given access to both parties' long-term private keys, ensuring that if users choose to delete their local copies of correspondence, they are permanently deleted. Note that this criterion requires criterion 2, end-to-end encryption.<ept id="tjiid740-63">&lt;/p&gt;</ept>

<bpt id="tjiid740-73">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-74">&lt;em style="line-height: 20.0063037872314px;"&gt;</bpt>Note: For this phase of the campaign, we accept a hybrid forward-secrecy approach with forward secrecy on the transport layer (for example through TLS with a Diffie-Hellman cipher suite) and non-forward-secret end-to-end encryption, plus an explicit guarantee that ciphertexts are not logged by the provider. This is a compromise as it requires trusting the provider not to log ciphertexts, but we prefer this setup to having no forward secrecy at all.<ept id="tjiid740-74">&lt;/em&gt;</ept><ept id="tjiid740-73">&lt;/p&gt;</ept>


<bpt id="tjiid740-77">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-78">&lt;a name="open"&gt;</bpt><ept id="tjiid740-78">&lt;/a&gt;</ept><bpt id="tjiid740-80">&lt;strong&gt;</bpt>5.<ept id="tjiid740-80">&lt;/strong&gt;</ept> <bpt id="tjiid740-82">&lt;strong&gt;</bpt>Is the code open to independent review?<ept id="tjiid740-82">&lt;/strong&gt;</ept>

This criterion requires that sufficient source-code has been published that a compatible implementation can be independently compiled. Although it is preferable, we do not require the code to be released under any specific free/open source license. We only require that all code which could affect the communication and encryption performed by the client is available for review in order to detect bugs, back doors, and structural problems.<ept id="tjiid740-77">&lt;/p&gt;</ept>

<bpt id="tjiid740-85">&lt;a name="open"&gt;</bpt><ept id="tjiid740-85">&lt;/a&gt;</ept><bpt id="tjiid740-87">&lt;em&gt;</bpt>Note: when tools are provided by an operating system vendor, we only require code for the tool and not the entire OS. This is a compromise, but the task of securing OSes and updates to OSes is beyond the scope of this project.<ept id="tjiid740-87">&lt;/em&gt;</ept>

<bpt id="tjiid740-89">&lt;a name="open"&gt;</bpt><ept id="tjiid740-89">&lt;/a&gt;</ept>

<bpt id="tjiid740-91">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-92">&lt;a name="open"&gt;</bpt><ept id="tjiid740-92">&lt;/a&gt;</ept><bpt id="tjiid740-94">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-94">&lt;/a&gt;</ept><bpt id="tjiid740-96">&lt;strong&gt;</bpt>6. Is the crypto design well-documented?<ept id="tjiid740-96">&lt;/strong&gt;</ept>

This criterion requires clear and detailed explanations of the cryptography used by the application. Preferably this should take the form of a white-paper written for review by an audience of professional cryptographers. This must provide answers to the following questions:<ept id="tjiid740-91">&lt;/p&gt;</ept>



<bpt id="tjiid740-99">&lt;ul&gt;</bpt><bpt id="tjiid740-100">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-101">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-102">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-102">&lt;/a&gt;</ept>Which algorithms and parameters (such as key sizes or elliptic curve groups) are used in every step of the encryption and authentication process<ept id="tjiid740-101">&lt;/p&gt;</ept>

<ept id="tjiid740-100">&lt;/li&gt;</ept>
<ept id="tjiid740-99">&lt;/ul&gt;</ept><bpt id="tjiid740-107">&lt;ul&gt;</bpt><bpt id="tjiid740-108">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-109">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-110">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-110">&lt;/a&gt;</ept>How keys are generated, stored, and exchanged between users<ept id="tjiid740-109">&lt;/p&gt;</ept>

<ept id="tjiid740-108">&lt;/li&gt;</ept>
<ept id="tjiid740-107">&lt;/ul&gt;</ept><bpt id="tjiid740-115">&lt;ul&gt;</bpt><bpt id="tjiid740-116">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-117">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-118">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-118">&lt;/a&gt;</ept>The life-cycle of keys and the process for users to change or revoke their key<ept id="tjiid740-117">&lt;/p&gt;</ept>

<ept id="tjiid740-116">&lt;/li&gt;</ept>
	<bpt id="tjiid740-122">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-123">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-124">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-124">&lt;/a&gt;</ept>A clear statement of the properties and protections the software aims to provide (implicitly, this tends to also provide a threat model, though it's good to have an explicit threat model too). This should also include a clear statement of scenarios in which the protocol is not secure. <ept id="tjiid740-123">&lt;/p&gt;</ept>

<ept id="tjiid740-122">&lt;/li&gt;</ept>
<ept id="tjiid740-115">&lt;/ul&gt;</ept><bpt id="tjiid740-129">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-129">&lt;/a&gt;</ept>

<bpt id="tjiid740-131">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-132">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-132">&lt;/a&gt;</ept><bpt id="tjiid740-134">&lt;a name="audited"&gt;</bpt><ept id="tjiid740-134">&lt;/a&gt;</ept><bpt id="tjiid740-136">&lt;strong&gt;</bpt>7.<ept id="tjiid740-136">&lt;/strong&gt;</ept> <bpt id="tjiid740-138">&lt;strong&gt;</bpt>Has there been an independent security audit?<ept id="tjiid740-138">&lt;/strong&gt;</ept><ept id="tjiid740-131">&lt;/p&gt;</ept>

<bpt id="tjiid740-141">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-142">&lt;a name="audited"&gt;</bpt><ept id="tjiid740-142">&lt;/a&gt;</ept>This criterion requires an independent security review has been performed within the 12 months prior to evaluation. This review must cover both the design and the implementation of the app and must be performed by a named auditing party that is independent of the tool's main development team. Audits by an independent security team within a large organization are sufficient. Recognizing that unpublished audits can be valuable, we do not require that the results of the audit have been made public, only that a named party is willing to verify that the audit took place.<ept id="tjiid740-141">&lt;/p&gt;</ept>

<bpt id="tjiid740-145">&lt;p dir="ltr"&gt;</bpt>We've discussed this criterion in depth in a Deeplinks post: <bpt id="tjiid740-146">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt>What Makes a Good Security Audit?<ept id="tjiid740-146">&lt;/a&gt;</ept><x id="tjiid740-148" ctype="lb"/> <ept id="tjiid740-145">&lt;/p&gt;</ept>


<ept id="tjiid740-9">&lt;/div&gt;</ept>
<bpt id="tjiid740-151">&lt;a name="about"&gt;</bpt><ept id="tjiid740-151">&lt;/a&gt;</ept>
<bpt id="tjiid740-153">&lt;div class="section"&gt;</bpt><bpt id="tjiid740-154">&lt;a name="changelog"&gt;</bpt><ept id="tjiid740-154">&lt;/a&gt;</ept>

<bpt id="tjiid740-156">&lt;h2&gt;</bpt>Changelog<ept id="tjiid740-156">&lt;/h2&gt;</ept>

Entries in the <bpt id="tjiid740-158">&lt;a href="#"&gt;</bpt>Secure Messaging Scorecard<ept id="tjiid740-158">&lt;/a&gt;</ept> were checked with the listed projects and companies when the Scorecard launched on 2014-11-06. Updates will be made if the listees or others inform us of changes or inaccuracies. A log of all such changes is below:

<bpt id="tjiid740-160">&lt;ul style="font-size: 13.0080003738403px; line-height: 20.0063037872314px;"&gt;</bpt><bpt id="tjiid740-161">&lt;li&gt;</bpt><bpt id="tjiid740-162">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>2015-06-12<ept id="tjiid740-162">&lt;/strong&gt;</ept><bpt id="tjiid740-164">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-164">&lt;/span&gt;</ept>

<bpt id="tjiid740-166">&lt;ul&gt;</bpt><bpt id="tjiid740-167">&lt;li&gt;</bpt>We removed Secret as the service was <bpt id="tjiid740-168">&lt;a href="https://medium.com/secret-den/sunset-bc18450478d5" title="Secret sunset"&gt;</bpt>shut down<ept id="tjiid740-168">&lt;/a&gt;</ept> in May 2015.<ept id="tjiid740-167">&lt;/li&gt;</ept>
<ept id="tjiid740-166">&lt;/ul&gt;</ept><ept id="tjiid740-161">&lt;/li&gt;</ept>
	<bpt id="tjiid740-173">&lt;li&gt;</bpt><bpt id="tjiid740-174">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>2015-03-06<ept id="tjiid740-174">&lt;/strong&gt;</ept><bpt id="tjiid740-176">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-176">&lt;/span&gt;</ept>

<bpt id="tjiid740-178">&lt;ul&gt;</bpt><bpt id="tjiid740-179">&lt;li&gt;</bpt>We credited QQ for completing an independent internal security audit (<bpt id="tjiid740-180">&lt;span style="color: #008000;"&gt;</bpt>✓<ept id="tjiid740-180">&lt;/span&gt;</ept>)<bpt id="tjiid740-182">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>.<ept id="tjiid740-182">&lt;/span&gt;</ept><ept id="tjiid740-179">&lt;/li&gt;</ept>
<ept id="tjiid740-178">&lt;/ul&gt;</ept><ept id="tjiid740-173">&lt;/li&gt;</ept>
	<bpt id="tjiid740-187">&lt;li&gt;</bpt><bpt id="tjiid740-188">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>2015-02-17<ept id="tjiid740-188">&lt;/strong&gt;</ept><bpt id="tjiid740-190">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-190">&lt;/span&gt;</ept>

<bpt id="tjiid740-192">&lt;ul&gt;</bpt><bpt id="tjiid740-193">&lt;li&gt;</bpt>We credited Telegram (both secret and regular mode) for undergoing a code audit in February 2015 <bpt id="tjiid740-194">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>(<ept id="tjiid740-194">&lt;/span&gt;</ept><bpt id="tjiid740-196">&lt;span style="line-height: 20.0063037872314px; color: #008000;"&gt;</bpt>✓<ept id="tjiid740-196">&lt;/span&gt;</ept><bpt id="tjiid740-198">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>).<ept id="tjiid740-198">&lt;/span&gt;</ept><ept id="tjiid740-193">&lt;/li&gt;</ept>
<ept id="tjiid740-192">&lt;/ul&gt;</ept><ept id="tjiid740-187">&lt;/li&gt;</ept>
	<bpt id="tjiid740-203">&lt;li&gt;</bpt><bpt id="tjiid740-204">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>2015-01-29<ept id="tjiid740-204">&lt;/strong&gt;</ept><bpt id="tjiid740-206">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-206">&lt;/span&gt;</ept>

<bpt id="tjiid740-208">&lt;ul&gt;</bpt><bpt id="tjiid740-209">&lt;li&gt;</bpt><bpt id="tjiid740-210">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>We have credited QQ for encrypting messages in transit <ept id="tjiid740-210">&lt;/span&gt;</ept><bpt id="tjiid740-212">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>(<ept id="tjiid740-212">&lt;/span&gt;</ept><bpt id="tjiid740-214">&lt;span style="color: #008000;"&gt;</bpt>✓<ept id="tjiid740-214">&lt;/span&gt;</ept><bpt id="tjiid740-216">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>). Though QQ does not use TLS/SSL, which is considered best practice, they have implemented a custom protocol for message encryption in transit.<ept id="tjiid740-216">&lt;/span&gt;</ept><ept id="tjiid740-209">&lt;/li&gt;</ept>
	<bpt id="tjiid740-219">&lt;li&gt;</bpt><bpt id="tjiid740-220">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>We have clarified our scoring for forward secrecy (criterion #4).<ept id="tjiid740-220">&lt;/span&gt;</ept><ept id="tjiid740-219">&lt;/li&gt;</ept>
<ept id="tjiid740-208">&lt;/ul&gt;</ept><ept id="tjiid740-203">&lt;/li&gt;</ept>
	<bpt id="tjiid740-225">&lt;li&gt;</bpt><bpt id="tjiid740-226">&lt;strong style="line-height: 1.538em;"&gt;</bpt>2015-01-05<ept id="tjiid740-226">&lt;/strong&gt;</ept><bpt id="tjiid740-228">&lt;span style="line-height: 1.538em;"&gt;</bpt> :<ept id="tjiid740-228">&lt;/span&gt;</ept>

<bpt id="tjiid740-230">&lt;ul&gt;</bpt><bpt id="tjiid740-231">&lt;li&gt;</bpt><bpt id="tjiid740-232">&lt;span style="line-height: 1.538em;"&gt;</bpt>We have split the scoring for Telegram into two rows: baseline Telegram and Telegram secret chats. Baseline Telegram chats are not end-to-end encrypted so that the provider can't read them (<ept id="tjiid740-232">&lt;/span&gt;</ept><bpt id="tjiid740-234">&lt;span style="color: #ff0000;" data-mce-mark="1"&gt;</bpt>✘<ept id="tjiid740-234">&lt;/span&gt;</ept><bpt id="tjiid740-236">&lt;span style="line-height: 1.538em;"&gt;</bpt>). Telegram secret chats are, and in addition Telegram now <ept id="tjiid740-236">&lt;/span&gt;</ept><bpt id="tjiid740-238">&lt;a href="https://core.telegram.org/api/pfs" title="Telegram perfect forward secrecy blog post" style="line-height: 1.538em;"&gt;</bpt>supports perfect forward secrecy<ept id="tjiid740-238">&lt;/a&gt;</ept><bpt id="tjiid740-240">&lt;span style="line-height: 1.538em;"&gt;</bpt> so that messages can be securely deleted (<ept id="tjiid740-240">&lt;/span&gt;</ept><bpt id="tjiid740-242">&lt;span style="color: #008000;" data-mce-mark="1"&gt;</bpt>✓<ept id="tjiid740-242">&lt;/span&gt;</ept><bpt id="tjiid740-244">&lt;span style="line-height: 1.538em;"&gt;</bpt>)<ept id="tjiid740-244">&lt;/span&gt;</ept><ept id="tjiid740-231">&lt;/li&gt;</ept>
	<bpt id="tjiid740-247">&lt;li&gt;</bpt><bpt id="tjiid740-248">&lt;span style="line-height: 1.538em;"&gt;</bpt>Wickr now provides the ability to verify contact's identities by exposing key fingerprints, which can be verified out-of-band or through in-band video. (<ept id="tjiid740-248">&lt;/span&gt;</ept><bpt id="tjiid740-250">&lt;span style="line-height: 1.538em;"&gt;</bpt>✓<ept id="tjiid740-250">&lt;/span&gt;</ept><bpt id="tjiid740-252">&lt;span style="line-height: 1.538em;"&gt;</bpt>)<ept id="tjiid740-252">&lt;/span&gt;</ept><ept id="tjiid740-247">&lt;/li&gt;</ept>
<ept id="tjiid740-230">&lt;/ul&gt;</ept><ept id="tjiid740-225">&lt;/li&gt;</ept>
<ept id="tjiid740-160">&lt;/ul&gt;</ept><bpt id="tjiid740-258">&lt;ul&gt;</bpt><bpt id="tjiid740-259">&lt;li&gt;</bpt><bpt id="tjiid740-260">&lt;strong&gt;</bpt>2014-11-14<ept id="tjiid740-260">&lt;/strong&gt;</ept> :

<bpt id="tjiid740-262">&lt;ul&gt;</bpt><bpt id="tjiid740-263">&lt;li&gt;</bpt>RIM has told us that BlackBerry Messenger Protected uses an <bpt id="tjiid740-264">&lt;a href="http://docs.blackberry.com/en/admin/deliverables/64972/BBM_Protected-Security_Note_en.pdf"&gt;</bpt>out-of-band passphrase exchange<ept id="tjiid740-264">&lt;/a&gt;</ept> and <bpt id="tjiid740-266">&lt;a href="https://en.wikipedia.org/wiki/SPEKE_(cryptography)"&gt;</bpt>EC-SPEKE<ept id="tjiid740-266">&lt;/a&gt;</ept> to perform identity verification. (✓) RIM has also told us that BBM Protected receives security reviews by an internal security team. (✓)<ept id="tjiid740-263">&lt;/li&gt;</ept>
	<bpt id="tjiid740-269">&lt;li&gt;</bpt>Viber has received a recent external security audit from EY Advanced Security Center. (✓)<ept id="tjiid740-269">&lt;/li&gt;</ept>
	<bpt id="tjiid740-271">&lt;li&gt;</bpt>Pidgin has documented a number of auditing processes including regular use of static analysis tools and audits by a team at Cisco Talos. The Pidgin developers were clear that they do not know how thorough and complete these audits have been, but the audits nonetheless <bpt id="tjiid740-272">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt>meet our criteria<ept id="tjiid740-272">&lt;/a&gt;</ept>. (✓) Although auditing of Pidgin improves the security of the related Adium project (the projects share many components including libpurple, libotr, and libxml2), the Adium developers tell us that besides occasional static analysis by the developers themselves they are not aware of any independent auditing effort that addresses the Adium-specific code. So for the time being that project will not receive an audit checkmark.<ept id="tjiid740-271">&lt;/li&gt;</ept>
<ept id="tjiid740-262">&lt;/ul&gt;</ept><ept id="tjiid740-259">&lt;/li&gt;</ept>
	<bpt id="tjiid740-277">&lt;li&gt;</bpt><bpt id="tjiid740-278">&lt;strong&gt;</bpt>2014-11-10<ept id="tjiid740-278">&lt;/strong&gt;</ept> : Skype check mark for end-to-end encryption <bpt id="tjiid740-280">&lt;a href="https://www.eff.org/deeplinks/2014/11/scorecard-update-we-cannot-credit-skype-end-end-encryption"&gt;</bpt>removed<ept id="tjiid740-280">&lt;/a&gt;</ept>. (✘)<ept id="tjiid740-277">&lt;/li&gt;</ept>
	<bpt id="tjiid740-283">&lt;li&gt;</bpt><bpt id="tjiid740-284">&lt;strong&gt;</bpt>2014-11-04<ept id="tjiid740-284">&lt;/strong&gt;</ept> : Snapchat app has audits from an internal security team. (✓)<ept id="tjiid740-283">&lt;/li&gt;</ept>
<ept id="tjiid740-258">&lt;/ul&gt;</ept><ept id="tjiid740-153">&lt;/div&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid740-1">&lt;a name="about"&gt;</bpt><ept id="tjiid740-1">&lt;/a&gt;</ept>
<bpt id="tjiid740-3">&lt;div class="section"&gt;</bpt>

<bpt id="tjiid740-4">&lt;h2&gt;</bpt>À propos<ept id="tjiid740-4">&lt;/h2&gt;</ept>

Pendant des années, des experts de la confidentialité et de la sécurité dans le monde entier ont appelé le public à adopter une cryptographie forte et open source afin de protéger nos communications. Les révélations de Snowden ont confirmé nos pires craintes : les gouvernements épient nos vies numériques, saisissant des communications transmises en clair.

Étant donné la surveillance gouvernementale généralisée, pourquoi les gens n’utilisent pas couramment des outils pour chiffrer leurs communications ? Ne communiquerions-nous pas tous un peu plus librement sans l'ombre de la surveillance ?

Cela se résume à deux choses : sécurité et convivialité. La plupart des outils qui sont faciles à utiliser par le grand public n’appliquent pas des pratiques exemplaires de sécurité (y compris le cryptage de bout à bout et le code source ouvert). Les outils de messagerie qui sont vraiment sécurisés ne sont  souvent pas faciles à utiliser ; les utilisateurs quotidiens peuvent avoir des difficultés pour installer la technologie nécessaire, pour vérifier son authenticité, pour créer un compte, ou peuvent les utiliser accidentellement de manière qui expose leurs communications.

L’EFF, en collaboration avec Julia Angwin de ProPublica et Joseph Bonneau du Princeton Center for Information Technology Policy, unissent leurs forces pour lancer une campagne pour une cryptographie sécurisée et conviviale. Nous défendons des technologies qui sont très sécurisés mais aussi simples à utiliser.

La Fiche d’évaluation de messagerie sécurisée (Secure Messaging Scorecard) examine des dizaines de technologies de messagerie et évalue chacune d’entre elles sur une série des meilleures pratiques de sécurité. Notre campagne est axée sur les technologies de communication (y compris les clients de messagerie instantanée, des applications de messagerie texte, des applications de messagerie électronique et les technologies d’appels vidéo). Ce sont les outils dont les utilisateurs quotidiens ont besoin pour communiquer avec leurs amis, leur famille et leurs collègues, et nous avons devons pouvoir leur proposer des solutions sécurisées.

Nous avons choisi des technologies qui ont une base importante d'utilisateurs (et donc beaucoup de communications sensibles) en outre de plus petites entreprises qui innovent en matière de pratiques de sécurité. Nous espérons que la fiche d'évaluation servira à une course vers l’excellence, stimulant l'innovation autour d’une cryptographie forte des communications numériques.

<ept id="tjiid740-3">&lt;/div&gt;</ept>
<bpt id="tjiid740-7">&lt;a name="methodology"&gt;</bpt><ept id="tjiid740-7">&lt;/a&gt;</ept>
<bpt id="tjiid740-9">&lt;div class="section"&gt;</bpt>

<bpt id="tjiid740-10">&lt;h2&gt;</bpt>Méthodologie<ept id="tjiid740-10">&lt;/h2&gt;</ept>

<bpt id="tjiid740-12">&lt;p dir="ltr"&gt;</bpt>Voici les critères que nous avons examinés dans l'évaluation de la sécurité des différents outils de communication.<ept id="tjiid740-12">&lt;/p&gt;</ept>


<bpt id="tjiid740-14">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-15">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-15">&lt;/a&gt;</ept><bpt id="tjiid740-17">&lt;strong&gt;</bpt>1. Votre communication est-elle chiffrée en transit ?<ept id="tjiid740-17">&lt;/strong&gt;</ept>
Ce critère exige que les communications de l’utilisateur soient chiffrées sur toutes les liaisons dans la voie de communication. Veuillez noter que nous n'exigeons pas le chiffrement des données qui sont transmises sur un réseau d'entreprise, même si ce serait l'idéal. Nous ne demandons pas que les métadonnées (telles que les adresses ou noms d'utilisateurs) soient chiffrées.<ept id="tjiid740-14">&lt;/p&gt;</ept>

<bpt id="tjiid740-20">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-20">&lt;/a&gt;</ept>

<bpt id="tjiid740-22">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-23">&lt;a name="encrypted"&gt;</bpt><ept id="tjiid740-23">&lt;/a&gt;</ept><bpt id="tjiid740-25">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-25">&lt;/a&gt;</ept><bpt id="tjiid740-27">&lt;strong&gt;</bpt>2.<ept id="tjiid740-27">&lt;/strong&gt;</ept> <bpt id="tjiid740-29">&lt;strong&gt;</bpt>Votre communication est-elle chiffrée avec une clé à laquelle le fournisseur n'a pas accès ?<ept id="tjiid740-29">&lt;/strong&gt;</ept>
Ce critère exige que toutes les communications de l'utilisateur soient chiffrées de bout en bout. Cela signifie que les clés nécessaires pour décrypter les messages doivent être générées et stockées dans les points de terminaison (c.-à-d. par les utilisateurs, et non par les serveurs). Les clés devraient jamais laisser de points de terminaison sauf par une action explicite de l'utilisateur, comme celle de créer une clé de sauvegarde ou de synchroniser des clés entre deux périphériques. C’est acceptable que les clés publiques des utilisateurs soient échangées à l'aide d'un serveur centralisé.<ept id="tjiid740-22">&lt;/p&gt;</ept>

<bpt id="tjiid740-32">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-32">&lt;/a&gt;</ept>

<bpt id="tjiid740-34">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-35">&lt;a name="e2e"&gt;</bpt><ept id="tjiid740-35">&lt;/a&gt;</ept><bpt id="tjiid740-37">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-37">&lt;/a&gt;</ept><bpt id="tjiid740-39">&lt;strong&gt;</bpt>3.<ept id="tjiid740-39">&lt;/strong&gt;</ept> <bpt id="tjiid740-41">&lt;strong&gt;</bpt>Pouvez-vous vérifier de façon indépendante l’identité de votre correspondant ? <ept id="tjiid740-41">&lt;/strong&gt;</ept><x id="tjiid740-43" ctype="lb"/>Ce critère exige qu'il existe une méthode intégrée pour que les utilisateurs puissent vérifier l'identité de leurs correspondants ainsi que l'intégrité du canal de communication, même si le fournisseur de services ou d'autres tierces parties sont compromis. Deux solutions acceptables sont :<ept id="tjiid740-34">&lt;/p&gt;</ept>



<bpt id="tjiid740-45">&lt;ul&gt;</bpt><bpt id="tjiid740-46">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-47">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-48">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-48">&lt;/a&gt;</ept>Une interface pour que les utilisateurs puissent afficher l'empreinte (hash) de clés publiques de leurs correspondants ainsi que la leur, permettant de les vérifier ensuite manuellement ou en local.<ept id="tjiid740-47">&lt;/p&gt;</ept>

<ept id="tjiid740-46">&lt;/li&gt;</ept>
	<bpt id="tjiid740-52">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-53">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-54">&lt;a name="verify"&gt;</bpt><ept id="tjiid740-54">&lt;/a&gt;</ept>Un protocole d'échange de clés avec une comparaison de type Short Authentification String (SAS), tel que le <bpt id="tjiid740-56">&lt;a href="http://en.wikipedia.org/wiki/Socialist_millionaire" style="line-height: 1.538em;"&gt;</bpt>protocole du millionnaire socialiste<ept id="tjiid740-56">&lt;/a&gt;</ept>.<ept id="tjiid740-53">&lt;/p&gt;</ept>

<ept id="tjiid740-52">&lt;/li&gt;</ept>
<ept id="tjiid740-45">&lt;/ul&gt;</ept><bpt id="tjiid740-61">&lt;p dir="ltr"&gt;</bpt>D’autres solutions sont possibles, mais toute solution doit vérifier la liaison entre les utilisateurs et le canal de chiffrement qui a été mis en place. Pour la fiche d’évaluation, nous demandons simplement qu'un mécanisme soit présent et nous n’évaluons pas sa facilité d'utilisation ni sa sécurité.<ept id="tjiid740-61">&lt;/p&gt;</ept>


<bpt id="tjiid740-63">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-64">&lt;a name="pfs"&gt;</bpt><ept id="tjiid740-64">&lt;/a&gt;</ept><bpt id="tjiid740-66">&lt;strong&gt;</bpt>4.<ept id="tjiid740-66">&lt;/strong&gt;</ept> <bpt id="tjiid740-68">&lt;strong&gt;</bpt>Les communications passées sont-elles sécurisées si vos clés sont volées ?<ept id="tjiid740-68">&lt;/strong&gt;</ept>

Ce critère exige que l'application offre une <bpt id="tjiid740-70">&lt;a href="https://www.eff.org/deeplinks/2013/08/pushing-perfect-forward-secrecy-important-web-privacy-protection"&gt;</bpt>confidentialité persistante<ept id="tjiid740-70">&lt;/a&gt;</ept> (forward secrecy), autrement dit, que toutes les communications soient chiffrées avec des clés éphémères qui sont systématiquement supprimés (de même que les valeurs aléatoires utilisées pour leur création). Il est impératif que ces clés ne puissent pas être reconstruites après le fait par quiconque même s’il a obtenu l’accès aux clés privées à long terme des deux parties, garantissant ainsi que si les utilisateurs choisissent de supprimer leurs copies locales de correspondance, que celles-ci sont définitivement supprimées. Notez que ce critère exige le critère numéro 2,  un chiffrement de bout en bout.<ept id="tjiid740-63">&lt;/p&gt;</ept>

<bpt id="tjiid740-73">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-74">&lt;em style="line-height: 20.0063037872314px;"&gt;</bpt>Remarque : Pour cette phase de la campagne, nous acceptons une approche hybride utilisant la confidentialité persistante sur la couche de transport (par exemple par le biais de TLS avec une suite de chiffrement Diffie-Hellman) et un chiffrement de bout en bout sans confidentialité persistante, plus une garantie explicite que les textes chiffrés ne sont pas enregistrées par le fournisseur. Il s'agit d'un compromis car il faut faire confiance au fournisseur de ne pas enregistrer les textes chiffrés, mais nous préférons cette configuration plutôt que de n’avoir aucune forme de confidentialité persistante.<ept id="tjiid740-74">&lt;/em&gt;</ept><ept id="tjiid740-73">&lt;/p&gt;</ept>


<bpt id="tjiid740-77">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-78">&lt;a name="open"&gt;</bpt><ept id="tjiid740-78">&lt;/a&gt;</ept><bpt id="tjiid740-80">&lt;strong&gt;</bpt>5.<ept id="tjiid740-80">&lt;/strong&gt;</ept> <bpt id="tjiid740-82">&lt;strong&gt;</bpt>Le code est-il ouvert à un examen indépendant ?<ept id="tjiid740-82">&lt;/strong&gt;</ept>

Ce critère exige qu’une portion suffisante de code source ait été publiée afin qu'une implémentation compatible puisse être compilée de manière indépendante. Bien que cela soit préférable, nous ne demandons pas que le code soit distribué sous une licence libre ou open source spécifique. Nous demandons seulement que l’ensemble du code qui pourrait affecter la communication et le chiffrement effectué par le client soit disponible pour examen afin de pouvoir détecter des bogues, des portes dérobées et des problèmes structurels.<ept id="tjiid740-77">&lt;/p&gt;</ept>

<bpt id="tjiid740-85">&lt;a name="open"&gt;</bpt><ept id="tjiid740-85">&lt;/a&gt;</ept><bpt id="tjiid740-87">&lt;em&gt;</bpt>Remarque : lorsque les outils sont fournis par un vendeur de système d'exploitation, nous avons seulement besoin du code de l'outil et non pas de l'OS en entier. Il s'agit d'un compromis, mais la tâche de sécuriser les systèmes d'exploitation et les mises à jour de systèmes d'exploitation dépasse le cadre de ce projet.<ept id="tjiid740-87">&lt;/em&gt;</ept>

<bpt id="tjiid740-89">&lt;a name="open"&gt;</bpt><ept id="tjiid740-89">&lt;/a&gt;</ept>

<bpt id="tjiid740-91">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-92">&lt;a name="open"&gt;</bpt><ept id="tjiid740-92">&lt;/a&gt;</ept><bpt id="tjiid740-94">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-94">&lt;/a&gt;</ept><bpt id="tjiid740-96">&lt;strong&gt;</bpt>6. La conception cryptographique est-elle bien documentée ?<ept id="tjiid740-96">&lt;/strong&gt;</ept>

Ce critère exige qu’il existe des explications claires et détaillées de la cryptographie utilisée par l'application. De préférence, cela devrait prendre la forme d'un livre blanc écrit pour une vérification par un public de cryptographes professionnels. Cela doit apporter des réponses aux questions suivantes :<ept id="tjiid740-91">&lt;/p&gt;</ept>



<bpt id="tjiid740-99">&lt;ul&gt;</bpt><bpt id="tjiid740-100">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-101">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-102">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-102">&lt;/a&gt;</ept>Quels algorithmes et paramètres (tels que les tailles de clés ou les groupes de courbes elliptiques) sont-ils utilisés à chaque étape du processus de cryptage et d'authentification ?<ept id="tjiid740-101">&lt;/p&gt;</ept>

<ept id="tjiid740-100">&lt;/li&gt;</ept>
<ept id="tjiid740-99">&lt;/ul&gt;</ept><bpt id="tjiid740-107">&lt;ul&gt;</bpt><bpt id="tjiid740-108">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-109">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-110">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-110">&lt;/a&gt;</ept>Comment les clés sont-elles générées, stockées et échangées entre les utilisateurs ?<ept id="tjiid740-109">&lt;/p&gt;</ept>

<ept id="tjiid740-108">&lt;/li&gt;</ept>
<ept id="tjiid740-107">&lt;/ul&gt;</ept><bpt id="tjiid740-115">&lt;ul&gt;</bpt><bpt id="tjiid740-116">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-117">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-118">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-118">&lt;/a&gt;</ept>Quel est le cycle de vie des clés et le processus pour que les utilisateurs puissent modifier ou révoquer leur clé ?<ept id="tjiid740-117">&lt;/p&gt;</ept>

<ept id="tjiid740-116">&lt;/li&gt;</ept>
	<bpt id="tjiid740-122">&lt;li dir="ltr"&gt;</bpt>

<bpt id="tjiid740-123">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-124">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-124">&lt;/a&gt;</ept>Une déclaration claire des propriétés et des protections que le logiciel a pour but de fournir (implicitement, cela tend à fournir également un modèle de menace, mais il est bon de prévoir en outre un modèle de menace explicite). Cela devrait inclure en outre un énoncé clair des scénarios dans lesquels le protocole n'est pas sûr. <ept id="tjiid740-123">&lt;/p&gt;</ept>

<ept id="tjiid740-122">&lt;/li&gt;</ept>
<ept id="tjiid740-115">&lt;/ul&gt;</ept><bpt id="tjiid740-129">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-129">&lt;/a&gt;</ept>

<bpt id="tjiid740-131">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-132">&lt;a name="documented"&gt;</bpt><ept id="tjiid740-132">&lt;/a&gt;</ept><bpt id="tjiid740-134">&lt;a name="audited"&gt;</bpt><ept id="tjiid740-134">&lt;/a&gt;</ept><bpt id="tjiid740-136">&lt;strong&gt;</bpt>7.<ept id="tjiid740-136">&lt;/strong&gt;</ept> <bpt id="tjiid740-138">&lt;strong&gt;</bpt>Un audit de sécurité indépendant a-t-il été conduit ?<ept id="tjiid740-138">&lt;/strong&gt;</ept><ept id="tjiid740-131">&lt;/p&gt;</ept>

<bpt id="tjiid740-141">&lt;p dir="ltr"&gt;</bpt><bpt id="tjiid740-142">&lt;a name="audited"&gt;</bpt><ept id="tjiid740-142">&lt;/a&gt;</ept>Ce critère exige qu'un audit de sécurité indépendant ait été effectué dans les 12 mois avant l'évaluation. Cette vérification doit couvrir le concept ainsi que la mise en œuvre de l’application et doit être effectué par un service d’audit reconnu, indépendant de l'équipe principale de développement de l'outil. Un audit réalisé par une équipe de sécurité indépendante au sein d'une organisation de grande taille est jugé adéquat. Reconnaissant que les audits non publiés peuvent être précieux, nous n’exigeons pas que les résultats de l’audit aient été rendus publiques, seulement qu'une partie nommée soit disposée de s’assurer que la vérification a eu lieu.<ept id="tjiid740-141">&lt;/p&gt;</ept>

<bpt id="tjiid740-145">&lt;p dir="ltr"&gt;</bpt>Nous avons discuté de ce critère en profondeur dans article des Deeplinks : <bpt id="tjiid740-146">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt>Qu’est-ce qui constitue un bon audit de sécurité ?<ept id="tjiid740-146">&lt;/a&gt;</ept><x id="tjiid740-148" ctype="lb"/> <ept id="tjiid740-145">&lt;/p&gt;</ept>


<ept id="tjiid740-9">&lt;/div&gt;</ept>
<bpt id="tjiid740-151">&lt;a name="about"&gt;</bpt><ept id="tjiid740-151">&lt;/a&gt;</ept>
<bpt id="tjiid740-153">&lt;div class="section"&gt;</bpt><bpt id="tjiid740-154">&lt;a name="changelog"&gt;</bpt><ept id="tjiid740-154">&lt;/a&gt;</ept>

<bpt id="tjiid740-156">&lt;h2&gt;</bpt>Journal des modifications<ept id="tjiid740-156">&lt;/h2&gt;</ept>

Les entrées de la <bpt id="tjiid740-158">&lt;a href="#"&gt;</bpt>Fiche d’évaluation de messagerie sécurisée<ept id="tjiid740-158">&lt;/a&gt;</ept> ont été confirmées auprès des entreprises et des projets énumérés lors du lancement de la Scorecard le 11-06-2014. Des mises à jour seront effectuées si les participants ou autres nous informent de changements ou d’inexactitudes. Vous trouverez ci-dessous le journal de toutes les modifications :

<bpt id="tjiid740-160">&lt;ul style="font-size: 13.0080003738403px; line-height: 20.0063037872314px;"&gt;</bpt><bpt id="tjiid740-161">&lt;li&gt;</bpt><bpt id="tjiid740-162">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>06-12-2015<ept id="tjiid740-162">&lt;/strong&gt;</ept><bpt id="tjiid740-164">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-164">&lt;/span&gt;</ept>

<bpt id="tjiid740-166">&lt;ul&gt;</bpt><bpt id="tjiid740-167">&lt;li&gt;</bpt>Nous avons retiré Secret car ce service a <bpt id="tjiid740-168">&lt;a href="https://medium.com/secret-den/sunset-bc18450478d5" title="Secret sunset"&gt;</bpt>fermé <ept id="tjiid740-168">&lt;/a&gt;</ept> en mai 2015.<ept id="tjiid740-167">&lt;/li&gt;</ept>
<ept id="tjiid740-166">&lt;/ul&gt;</ept><ept id="tjiid740-161">&lt;/li&gt;</ept>
	<bpt id="tjiid740-173">&lt;li&gt;</bpt><bpt id="tjiid740-174">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>06-03-2015<ept id="tjiid740-174">&lt;/strong&gt;</ept><bpt id="tjiid740-176">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-176">&lt;/span&gt;</ept>

<bpt id="tjiid740-178">&lt;ul&gt;</bpt><bpt id="tjiid740-179">&lt;li&gt;</bpt>Nous avons crédité QQ pour avoir conduit un audit interne de sécurité indépendant (<bpt id="tjiid740-180">&lt;span style="color: #008000;"&gt;</bpt>✓<ept id="tjiid740-180">&lt;/span&gt;</ept>)<bpt id="tjiid740-182">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>.<ept id="tjiid740-182">&lt;/span&gt;</ept><ept id="tjiid740-179">&lt;/li&gt;</ept>
<ept id="tjiid740-178">&lt;/ul&gt;</ept><ept id="tjiid740-173">&lt;/li&gt;</ept>
	<bpt id="tjiid740-187">&lt;li&gt;</bpt><bpt id="tjiid740-188">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>17-02-2015<ept id="tjiid740-188">&lt;/strong&gt;</ept><bpt id="tjiid740-190">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-190">&lt;/span&gt;</ept>

<bpt id="tjiid740-192">&lt;ul&gt;</bpt><bpt id="tjiid740-193">&lt;li&gt;</bpt>Nous avons crédité Telegram (mode secret et mode normal) pour avoir été soumis à un audit de code en février 2015 <bpt id="tjiid740-194">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>(<ept id="tjiid740-194">&lt;/span&gt;</ept><bpt id="tjiid740-196">&lt;span style="line-height: 20.0063037872314px; color: #008000;"&gt;</bpt>✓<ept id="tjiid740-196">&lt;/span&gt;</ept><bpt id="tjiid740-198">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>).<ept id="tjiid740-198">&lt;/span&gt;</ept><ept id="tjiid740-193">&lt;/li&gt;</ept>
<ept id="tjiid740-192">&lt;/ul&gt;</ept><ept id="tjiid740-187">&lt;/li&gt;</ept>
	<bpt id="tjiid740-203">&lt;li&gt;</bpt><bpt id="tjiid740-204">&lt;strong style="line-height: 20.0063037872314px;"&gt;</bpt>29-01-2015<ept id="tjiid740-204">&lt;/strong&gt;</ept><bpt id="tjiid740-206">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt> :<ept id="tjiid740-206">&lt;/span&gt;</ept>

<bpt id="tjiid740-208">&lt;ul&gt;</bpt><bpt id="tjiid740-209">&lt;li&gt;</bpt><bpt id="tjiid740-210">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>Nous avons crédité QQ pour le cryptage des messages en transit <ept id="tjiid740-210">&lt;/span&gt;</ept><bpt id="tjiid740-212">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>(<ept id="tjiid740-212">&lt;/span&gt;</ept><bpt id="tjiid740-214">&lt;span style="color: #008000;"&gt;</bpt>✓<ept id="tjiid740-214">&lt;/span&gt;</ept><bpt id="tjiid740-216">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>). Bien que QQ n'utilise pas de TLS/SSL, ce qui est considéré comme la meilleure pratique, ils ont mis en œuvre un protocole personnalisé pour le cryptage des messages en transit.<ept id="tjiid740-216">&lt;/span&gt;</ept><ept id="tjiid740-209">&lt;/li&gt;</ept>
	<bpt id="tjiid740-219">&lt;li&gt;</bpt><bpt id="tjiid740-220">&lt;span style="line-height: 20.0063037872314px;"&gt;</bpt>Nous avons clarifié notre système de notation pour la confidentialité persistante (critère #4).<ept id="tjiid740-220">&lt;/span&gt;</ept><ept id="tjiid740-219">&lt;/li&gt;</ept>
<ept id="tjiid740-208">&lt;/ul&gt;</ept><ept id="tjiid740-203">&lt;/li&gt;</ept>
	<bpt id="tjiid740-225">&lt;li&gt;</bpt><bpt id="tjiid740-226">&lt;strong style="line-height: 1.538em;"&gt;</bpt>05-01-2015<ept id="tjiid740-226">&lt;/strong&gt;</ept><bpt id="tjiid740-228">&lt;span style="line-height: 1.538em;"&gt;</bpt> :<ept id="tjiid740-228">&lt;/span&gt;</ept>

<bpt id="tjiid740-230">&lt;ul&gt;</bpt><bpt id="tjiid740-231">&lt;li&gt;</bpt><bpt id="tjiid740-232">&lt;span style="line-height: 1.538em;"&gt;</bpt>Nous avons réparti le score de Telegram en deux rangées : conversations Telegram normales et conversations Telegram secrètes. Les conversations normales Telegram ne sont pas chiffrées de bout en bout afin que le fournisseur ne puisse pas les lire. (<ept id="tjiid740-232">&lt;/span&gt;</ept><bpt id="tjiid740-234">&lt;span style="color: #ff0000;" data-mce-mark="1"&gt;</bpt>✘<ept id="tjiid740-234">&lt;/span&gt;</ept><bpt id="tjiid740-236">&lt;span style="line-height: 1.538em;"&gt;</bpt>). Les conversations secrètes de Telegram le sont, et en outre Telgram <ept id="tjiid740-236">&lt;/span&gt;</ept><bpt id="tjiid740-238">&lt;a href="https://core.telegram.org/api/pfs" title="Telegram perfect forward secrecy blog post" style="line-height: 1.538em;"&gt;</bpt>prend désormais en charge la confidentialité persistante parfaite<ept id="tjiid740-238">&lt;/a&gt;</ept><bpt id="tjiid740-240">&lt;span style="line-height: 1.538em;"&gt;</bpt> afin que les messages puissent être supprimés en toute sécurité (<ept id="tjiid740-240">&lt;/span&gt;</ept><bpt id="tjiid740-242">&lt;span style="color: #008000;" data-mce-mark="1"&gt;</bpt>✓<ept id="tjiid740-242">&lt;/span&gt;</ept><bpt id="tjiid740-244">&lt;span style="line-height: 1.538em;"&gt;</bpt>)<ept id="tjiid740-244">&lt;/span&gt;</ept><ept id="tjiid740-231">&lt;/li&gt;</ept>.
	<bpt id="tjiid740-247">&lt;li&gt;</bpt><bpt id="tjiid740-248">&lt;span style="line-height: 1.538em;"&gt;</bpt>Wickr offre maintenant la possibilité de vérifier l'identité d’un contact en exposant les principales empreintes digitales, qui peuvent être vérifiées en local ou par l'intermédiaire de la bande vidéo. (<ept id="tjiid740-248">&lt;/span&gt;</ept><bpt id="tjiid740-250">&lt;span style="line-height: 1.538em;"&gt;</bpt>✓<ept id="tjiid740-250">&lt;/span&gt;</ept><bpt id="tjiid740-252">&lt;span style="line-height: 1.538em;"&gt;</bpt>)<ept id="tjiid740-252">&lt;/span&gt;</ept><ept id="tjiid740-247">&lt;/li&gt;</ept>
<ept id="tjiid740-230">&lt;/ul&gt;</ept><ept id="tjiid740-225">&lt;/li&gt;</ept>
<ept id="tjiid740-160">&lt;/ul&gt;</ept><bpt id="tjiid740-258">&lt;ul&gt;</bpt><bpt id="tjiid740-259">&lt;li&gt;</bpt><bpt id="tjiid740-260">&lt;strong&gt;</bpt>14-11-2014<ept id="tjiid740-260">&lt;/strong&gt;</ept> :

<bpt id="tjiid740-262">&lt;ul&gt;</bpt><bpt id="tjiid740-263">&lt;li&gt;</bpt>RIM nous a dit que BlackBerry Messenger Protected utilise une <bpt id="tjiid740-264">&lt;a href="http://docs.blackberry.com/en/admin/deliverables/64972/BBM_Protected-Security_Note_en.pdf"&gt;</bpt>phrase de chiffrement d’échange hors-bande<ept id="tjiid740-264">&lt;/a&gt;</ept> et <bpt id="tjiid740-266">&lt;a href="https://en.wikipedia.org/wiki/SPEKE_(cryptography)"&gt;</bpt>EC-SPEKE<ept id="tjiid740-266">&lt;/a&gt;</ept> pour effectuer la vérification d'identité. (✓) RIM nous a également dit que BBM Protected reçoit des révisions de sécurité par une équipe interne de sécurité. (✓)<ept id="tjiid740-263">&lt;/li&gt;</ept>
	<bpt id="tjiid740-269">&lt;li&gt;</bpt>Viber a reçu un récent audit de sécurité externe de la part d’EY Advanced Security Center. (✓)<ept id="tjiid740-269">&lt;/li&gt;</ept>
	<bpt id="tjiid740-271">&lt;li&gt;</bpt>Pidgin a recensé un certain nombre d’audits de procédures, y compris l'utilisation régulière des outils d'analyse statique et des audits par une équipe de Cisco Talos. Les développeurs de Pidgin ont été clairs qu'ils ne savent pas à quel point ces audits ont été complets et approfondis, mais ces audits <bpt id="tjiid740-272">&lt;a href="https://www.eff.org/deeplinks/2014/11/what-makes-good-security-audit"&gt;</bpt>satisfont néanmoins nos critères<ept id="tjiid740-272">&lt;/a&gt;</ept>. (✓) Bien que l'audit de Pidgin améliore la sécurité du projet connexe Adium (les projets partagent de nombreux composants y compris libpurple, libotr et libxml2), les développeurs d'Adium nous disent qu'à part l'analyse statique occasionnelle effectuée par les développeurs eux-mêmes, ils ne sont pas au courant d’un effort d’audit indépendant traitant le code spécifique d’Adium. Donc, pour le moment, ce projet ne recevra pas de coche pour un audit vérification.<ept id="tjiid740-271">&lt;/li&gt;</ept>
<ept id="tjiid740-262">&lt;/ul&gt;</ept><ept id="tjiid740-259">&lt;/li&gt;</ept>
	<bpt id="tjiid740-277">&lt;li&gt;</bpt><bpt id="tjiid740-278">&lt;strong&gt;</bpt>10-11-2014<ept id="tjiid740-278">&lt;/strong&gt;</ept> : La coche de la case pour le chiffrement de bout à bout a été <bpt id="tjiid740-280">&lt;a href="https://www.eff.org/deeplinks/2014/11/scorecard-update-we-cannot-credit-skype-end-end-encryption"&gt;</bpt>retirée<ept id="tjiid740-280">&lt;/a&gt;</ept> pour Skype. (✘)<ept id="tjiid740-277">&lt;/li&gt;</ept>
	<bpt id="tjiid740-283">&lt;li&gt;</bpt><bpt id="tjiid740-284">&lt;strong&gt;</bpt>04-11-2014<ept id="tjiid740-284">&lt;/strong&gt;</ept> : L’application Snapchat a reçu un audit par une équipe interne de sécurité. (✓)<ept id="tjiid740-283">&lt;/li&gt;</ept>
<ept id="tjiid740-258">&lt;/ul&gt;</ept><ept id="tjiid740-153">&lt;/div&gt;</ept></target><note>Body</note></trans-unit><trans-unit id="740][body][0][summary" resname="740][body][0][summary"><source xml:lang="en"><bpt id="tjiid740-1">&lt;h3&gt;</bpt>Which apps and tools actually keep your messages safe?<ept id="tjiid740-1">&lt;/h3&gt;</ept>

<bpt id="tjiid740-3">&lt;div class="section"&gt;</bpt>

In the face of widespread Internet surveillance, we need a secure and practical means of talking to each other from our phones and computers. Many companies offer “secure messaging” products—but are these systems actually secure? We decided to find out, in the first phase of a new EFF Campaign for Secure &amp;amp; Usable Crypto.

This scorecard represents only the first phase of the campaign. In later phases, we are planning to offer closer examinations of the usability and security of the tools that score the highest here. As such, <bpt id="tjiid740-4">&lt;span style="text-decoration: underline;"&gt;</bpt>the results in the scorecard below should not be read as endorsements of individual tools or guarantees of their security<ept id="tjiid740-4">&lt;/span&gt;</ept>; they are merely indications that the projects are on the right track. For practical advice and tutorials on how to protect your online communication against surveillance, check out EFF's <bpt id="tjiid740-6">&lt;a href="https://ssd.eff.org/"&gt;</bpt>Surveillance Self-Defense<ept id="tjiid740-6">&lt;/a&gt;</ept> guide.

<ept id="tjiid740-3">&lt;/div&gt;</ept></source><target xml:lang="fr"><bpt id="tjiid740-1">&lt;h3&gt;</bpt>Quels outils et applications protègent réellement vos messages ?<ept id="tjiid740-1">&lt;/h3&gt;</ept>

<bpt id="tjiid740-3">&lt;div class="section"&gt;</bpt>

Face à la cybersurveillance généralisée, nous avons besoin d'un moyen sûr et pratique pour parler les uns aux autres de nos téléphones et ordinateurs. Beaucoup de compagnies offrent des produits de « messagerie sécurisée » — mais ces systèmes sont-ils réellement sûrs ? Nous avons décidé de le découvrir, dans la première phase d'une nouvelle campagne de l'EFF pour une cryptographie sécurisée et facile d’utilisation.

Cette fiche d’évaluation représente seulement la première phase de cette campagne. Dans les phases ultérieures, nous prévoyons d’offrir des examens plus étroits concernant la convivialité et la sécurité des outils dont le score est le plus élevé. Par conséquent, <bpt id="tjiid740-4">&lt;span style="text-decoration: underline;"&gt;</bpt>les résultats de la fiche d’évaluation ci-dessous ne devraient pas être interprétés comme une approbation des outils individuels ou une garantie de leur sécurité<ept id="tjiid740-4">&lt;/span&gt;</ept> ; il s’agit simplement d’éléments indiquant que les projets sont sur la bonne voie. Pour des conseils pratiques et des tutoriels sur la façon de protéger vos communications en ligne face à la surveillance, consultez le <bpt id="tjiid740-6">&lt;a href="https://ssd.eff.org/"&gt;</bpt>guide d’autoprotection digitale contre la surveillance<ept id="tjiid740-6">&lt;/a&gt;</ept> de l'EFF.

<ept id="tjiid740-3">&lt;/div&gt;</ept></target><note>Summary</note></trans-unit><trans-unit id="740][title_field][0][value" resname="740][title_field][0][value"><source xml:lang="en">Secure Messaging Scorecard</source><target xml:lang="fr">Fiche d’évaluation de messagerie sécurisée</target><note>Title</note></trans-unit></group><group id="741"><note>HTTPS Everywhere (menu:item:1953)</note><trans-unit id="741][menu:item:1953:title" resname="741][menu:item:1953:title"><source xml:lang="en">HTTPS Everywhere</source><target xml:lang="fr">HTTPS Everywhere</target><note>Title</note></trans-unit></group><group id="742"><note>Creating HTTPS Everywhere Rulesets (menu:item:1956)</note><trans-unit id="742][menu:item:1956:title" resname="742][menu:item:1956:title"><source xml:lang="en">Creating HTTPS Everywhere Rulesets</source><target xml:lang="fr">Créer des jeux de règle pour HTTPS Everywhere</target><note>Title</note></trans-unit></group><group id="743"><note>HTTPS Everywhere Atlas (menu:item:7475)</note><trans-unit id="743][menu:item:7475:title" resname="743][menu:item:7475:title"><source xml:lang="en">HTTPS Everywhere Atlas</source><target xml:lang="fr">HTTPS Everywhere Atlas</target><note>Title</note></trans-unit></group><group id="744"><note>How to Deploy HTTPS Correctly (menu:item:1955)</note><trans-unit id="744][menu:item:1955:title" resname="744][menu:item:1955:title"><source xml:lang="en">How to Deploy HTTPS Correctly</source><target xml:lang="fr">Comment déployer HTTPS correctement</target><note>Title</note></trans-unit></group><group id="745"><note>Report Bugs / Hack On The Code (menu:item:1957)</note><trans-unit id="745][menu:item:1957:title" resname="745][menu:item:1957:title"><source xml:lang="en">Report Bugs / Hack On The Code</source><target xml:lang="fr">Rapporter un bogue / Bidouiller le code</target><note>Title</note></trans-unit></group><group id="746"><note>FAQ (menu:item:1954)</note><trans-unit id="746][menu:item:1954:title" resname="746][menu:item:1954:title"><source xml:lang="en">FAQ</source><target xml:lang="fr">FAQ</target><note>Title</note></trans-unit></group><group id="747"><note>HTTPS Everywhere is a Firef...</note><trans-unit id="747][singular" resname="747][singular"><source xml:lang="en">HTTPS Everywhere is a Firefox, Chrome, and Opera extension that encrypts your communications with many major websites, making your browsing more secure.</source><target xml:lang="fr">HTTPS Everywhere est une extension pour Firefox, Chrome et Opera qui chiffre vos communications sur de nombreux sites majeurs, rendant votre navigation plus sûre.</target><note>Singular</note></trans-unit></group><group id="748"><note>Encrypt the web: Install HT...</note><trans-unit id="748][singular" resname="748][singular"><source xml:lang="en">Encrypt the web: Install HTTPS Everywhere today.</source><target xml:lang="fr">Chiffrez le Web : Installez HTTPS Everywhere aujourd'hui</target><note>Singular</note></trans-unit></group><group id="749"><note>Install in Firefox</note><trans-unit id="749][singular" resname="749][singular"><source xml:lang="en">Install in Firefox</source><target xml:lang="fr">Installer pour Firefox</target><note>Singular</note></trans-unit></group><group id="750"><note>Install in Firefox for Android</note><trans-unit id="750][singular" resname="750][singular"><source xml:lang="en">Install in Firefox for Android</source><target xml:lang="fr">Installer pour Firefox sur Android</target><note>Singular</note></trans-unit></group><group id="751"><note>Install in Chrome</note><trans-unit id="751][singular" resname="751][singular"><source xml:lang="en">Install in Chrome</source><target xml:lang="fr">Installer pour Chrome</target><note>Singular</note></trans-unit></group><group id="752"><note>Install in Opera</note><trans-unit id="752][singular" resname="752][singular"><source xml:lang="en">Install in Opera</source><target xml:lang="fr">Installer pour Opera</target><note>Singular</note></trans-unit></group><group id="753"><note>Recent Releases</note><trans-unit id="753][singular" resname="753][singular"><source xml:lang="en">Recent Releases</source><target xml:lang="fr">Versions récentes</target><note>Singular</note></trans-unit></group><group id="754"><note>Stable releases for Firefox:</note><trans-unit id="754][singular" resname="754][singular"><source xml:lang="en">Stable releases for Firefox:</source><target xml:lang="fr">Versions stables pour Firefox :</target><note>Singular</note></trans-unit></group><group id="755"><note>Stable releases for Chrome,...</note><trans-unit id="755][singular" resname="755][singular"><source xml:lang="en">Stable releases for Chrome, Chromium, and Opera 15+:</source><target xml:lang="fr">Versions stables pour Chrome, Chromium et Opera 15+ :</target><note>Singular</note></trans-unit></group><group id="756"><note>Changelog.txt</note><trans-unit id="756][singular" resname="756][singular"><source xml:lang="en">Changelog.txt</source><target xml:lang="fr">Changelog.txt</target><note>Singular</note></trans-unit></group><group id="757"><note>Note: If you install the st...</note><trans-unit id="757][singular" resname="757][singular"><source xml:lang="en">Note: If you install the standalone .crx (i.e. not from the Chrome Web Store), and you are using Windows, Chrome will automatically disable the extension on each restart. You may be able to work around by using developer mode. See <bpt id="tjiid757-1">&lt;a href="https://github.com/EFForg/https-everywhere/issues/819"&gt;</bpt>this issue<ept id="tjiid757-1">&lt;/a&gt;</ept>.</source><target xml:lang="fr">Remarque: Si vous utilisez Windows et installez le .crx autonome (c.-à-d. pas à partir du Chrome Web Store), Chrome désactivera automatiquement l'extension à chaque redémarrage. Vous pourrez peut-être contourner cela en utilisant le mode développeur. Voir <bpt id="tjiid757-1">&lt;a href="https://github.com/EFForg/https-everywhere/issues/819"&gt;</bpt>le souci<ept id="tjiid757-1">&lt;/a&gt;</ept> en question.</target><note>Singular</note></trans-unit></group><group id="758"><note>Featured Tools</note><trans-unit id="758][singular" resname="758][singular"><source xml:lang="en">Featured Tools</source><target xml:lang="fr">Outils recommandés</target><note>Singular</note></trans-unit></group><group id="759"><note>All Tools</note><trans-unit id="759][singular" resname="759][singular"><source xml:lang="en">All Tools</source><target xml:lang="fr">Tous les outils</target><note>Singular</note></trans-unit></group><group id="760"><note>Yes</note><trans-unit id="760][singular" resname="760][singular"><source xml:lang="en">Yes</source><target xml:lang="fr">Oui</target><note>Singular</note></trans-unit></group><group id="761"><note>No</note><trans-unit id="761][singular" resname="761][singular"><source xml:lang="en">No</source><target xml:lang="fr">Non</target><note>Singular</note></trans-unit></group><group id="762"><note>Encrypted in transit?</note><trans-unit id="762][singular" resname="762][singular"><source xml:lang="en">Encrypted in transit?</source><target xml:lang="fr">Chiffré en transit ?</target><note>Singular</note></trans-unit></group><group id="763"><note>Encrypted so the provider c...</note><trans-unit id="763][singular" resname="763][singular"><source xml:lang="en">Encrypted so the provider can’t read it?</source><target xml:lang="fr">Chiffré afin que le fournisseur ne puisse pas le lire ?</target><note>Singular</note></trans-unit></group><group id="764"><note>Can you verify contacts’ id...</note><trans-unit id="764][singular" resname="764][singular"><source xml:lang="en">Can you verify contacts’ identities?</source><target xml:lang="fr">Pouvez-vous vérifier l'identité des contacts ?</target><note>Singular</note></trans-unit></group><group id="765"><note>Are past comms secure if yo...</note><trans-unit id="765][singular" resname="765][singular"><source xml:lang="en">Are past comms secure if your keys are stolen?</source><target xml:lang="fr">Les dernières communications sont-elles en sécurité si les clés sont volées ?</target><note>Singular</note></trans-unit></group><group id="766"><note>Is the code open to indepen...</note><trans-unit id="766][singular" resname="766][singular"><source xml:lang="en">Is the code open to independent review?</source><target xml:lang="fr">Le code est-il ouvert à un examen indépendant ?</target><note>Singular</note></trans-unit></group><group id="767"><note>Is security design properly...</note><trans-unit id="767][singular" resname="767][singular"><source xml:lang="en">Is security design properly documented?</source><target xml:lang="fr">La conception de sécurité est-elle bien documentée ?</target><note>Singular</note></trans-unit></group><group id="768"><note>Has there been any recent c...</note><trans-unit id="768][singular" resname="768][singular"><source xml:lang="en">Has there been any recent code audit?</source><target xml:lang="fr">Y a-t-il eu de vérification récente du code ?</target><note>Singular</note></trans-unit></group></body></file></xliff>